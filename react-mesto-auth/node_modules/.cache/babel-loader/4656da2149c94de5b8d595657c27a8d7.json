{"ast":null,"code":"import _objectSpread from\"C:/dev/frontend/react-mesto-auth/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _classCallCheck from\"C:/dev/frontend/react-mesto-auth/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"C:/dev/frontend/react-mesto-auth/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";export var Auth=/*#__PURE__*/function(){function Auth(baseUrl,headers){_classCallCheck(this,Auth);this._baseUrl=baseUrl;this._headers=headers;}_createClass(Auth,[{key:\"_checkResponse\",value:function _checkResponse(res){if(res.ok){return res.json();}return Promise.reject(\"\\u041E\\u0448\\u0438\\u0431\\u043A\\u0430 \".concat(res.status));}},{key:\"registration\",value:function registration(data){return fetch(\"\".concat(this._baseUrl,\"/signup\"),{method:\"POST\",headers:this._headers,body:JSON.stringify({password:data.registerPassword,email:data.registerEmail})}).then(function(res){return res;}).then(this._checkResponse);}},{key:\"authorization\",value:function authorization(data){return fetch(\"\".concat(this._baseUrl,\"/signin\"),{method:\"POST\",headers:this._headers,body:JSON.stringify({password:data.logInPassword,email:data.logInEmail})}).then(function(res){console.log(res);return res;}).then(function(res){if(res.token){localStorage.setItem(\"token\",res.token);return res;}else{return res;}})// .then((res) => {\n//   if (res.cookie.token) {\n//     localStorage.setItem(\"token\", res.cookie.token);\n//     return res;\n//   } else {\n//     return res;\n//   }\n// })\n.then(this._checkResponse);}},{key:\"checkToken\",value:function checkToken(token){return fetch(\"\".concat(this._baseUrl,\"/users/me\"),{method:\"GET\",headers:_objectSpread(_objectSpread({},this._headers),{},{Authorization:\"Bearer\".concat(token)})}).then(function(res){return res;}).then(this._checkResponse);}}]);return Auth;}();// https://api.best-site.ever.nomoredomains.work\nvar sendAuth=new Auth(\"http://localhost:3000\",{// authorization: `Bearer${localStorage.getItem(\"token\")}`,\n\"Content-Type\":\"application/json\"});export default sendAuth;","map":{"version":3,"sources":["C:/dev/frontend/react-mesto-auth/src/utils/Auth.js"],"names":["Auth","baseUrl","headers","_baseUrl","_headers","res","ok","json","Promise","reject","status","data","fetch","method","body","JSON","stringify","password","registerPassword","email","registerEmail","then","_checkResponse","logInPassword","logInEmail","console","log","token","localStorage","setItem","Authorization","sendAuth"],"mappings":"kcAAA,UAAaA,CAAAA,IAAb,yBACE,cAAYC,OAAZ,CAAqBC,OAArB,CAA8B,4BAC5B,KAAKC,QAAL,CAAgBF,OAAhB,CACA,KAAKG,QAAL,CAAgBF,OAAhB,CACD,CAJH,+CAME,wBAAeG,GAAf,CAAoB,CAClB,GAAIA,GAAG,CAACC,EAAR,CAAY,CACV,MAAOD,CAAAA,GAAG,CAACE,IAAJ,EAAP,CACD,CACD,MAAOC,CAAAA,OAAO,CAACC,MAAR,gDAAyBJ,GAAG,CAACK,MAA7B,EAAP,CACD,CAXH,4BAaE,sBAAaC,IAAb,CAAmB,CACjB,MAAOC,CAAAA,KAAK,WAAI,KAAKT,QAAT,YAA4B,CACtCU,MAAM,CAAE,MAD8B,CAEtCX,OAAO,CAAE,KAAKE,QAFwB,CAGtCU,IAAI,CAAEC,IAAI,CAACC,SAAL,CAAe,CACnBC,QAAQ,CAAEN,IAAI,CAACO,gBADI,CAEnBC,KAAK,CAAER,IAAI,CAACS,aAFO,CAAf,CAHgC,CAA5B,CAAL,CAQJC,IARI,CAQC,SAAChB,GAAD,CAAS,CACb,MAAOA,CAAAA,GAAP,CACD,CAVI,EAWJgB,IAXI,CAWC,KAAKC,cAXN,CAAP,CAYD,CA1BH,6BA4BE,uBAAcX,IAAd,CAAoB,CAClB,MACEC,CAAAA,KAAK,WAAI,KAAKT,QAAT,YAA4B,CAC/BU,MAAM,CAAE,MADuB,CAE/BX,OAAO,CAAE,KAAKE,QAFiB,CAG/BU,IAAI,CAAEC,IAAI,CAACC,SAAL,CAAe,CACnBC,QAAQ,CAAEN,IAAI,CAACY,aADI,CAEnBJ,KAAK,CAAER,IAAI,CAACa,UAFO,CAAf,CAHyB,CAA5B,CAAL,CAQGH,IARH,CAQQ,SAAChB,GAAD,CAAS,CACboB,OAAO,CAACC,GAAR,CAAYrB,GAAZ,EACA,MAAOA,CAAAA,GAAP,CACD,CAXH,EAYGgB,IAZH,CAYQ,SAAChB,GAAD,CAAS,CACb,GAAIA,GAAG,CAACsB,KAAR,CAAe,CACbC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAA8BxB,GAAG,CAACsB,KAAlC,EACA,MAAOtB,CAAAA,GAAP,CACD,CAHD,IAGO,CACL,MAAOA,CAAAA,GAAP,CACD,CACF,CAnBH,CAoBE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA3BF,CA4BGgB,IA5BH,CA4BQ,KAAKC,cA5Bb,CADF,CA+BD,CA5DH,0BA8DE,oBAAWK,KAAX,CAAkB,CAChB,MAAOf,CAAAA,KAAK,WAAI,KAAKT,QAAT,cAA8B,CACxCU,MAAM,CAAE,KADgC,CAExCX,OAAO,gCACF,KAAKE,QADH,MAEL0B,aAAa,iBAAWH,KAAX,CAFR,EAFiC,CAA9B,CAAL,CAOJN,IAPI,CAOC,SAAChB,GAAD,CAAS,CACb,MAAOA,CAAAA,GAAP,CACD,CATI,EAUJgB,IAVI,CAUC,KAAKC,cAVN,CAAP,CAWD,CA1EH,oBA4EA;AACA,GAAMS,CAAAA,QAAQ,CAAG,GAAI/B,CAAAA,IAAJ,CAAS,uBAAT,CAAkC,CACjD;AACA,eAAgB,kBAFiC,CAAlC,CAAjB,CAKA,cAAe+B,CAAAA,QAAf","sourcesContent":["export class Auth {\r\n  constructor(baseUrl, headers) {\r\n    this._baseUrl = baseUrl;\r\n    this._headers = headers;\r\n  }\r\n\r\n  _checkResponse(res) {\r\n    if (res.ok) {\r\n      return res.json();\r\n    }\r\n    return Promise.reject(`Ошибка ${res.status}`);\r\n  }\r\n\r\n  registration(data) {\r\n    return fetch(`${this._baseUrl}/signup`, {\r\n      method: \"POST\",\r\n      headers: this._headers,\r\n      body: JSON.stringify({\r\n        password: data.registerPassword,\r\n        email: data.registerEmail,\r\n      }),\r\n    })\r\n      .then((res) => {\r\n        return res;\r\n      })\r\n      .then(this._checkResponse);\r\n  }\r\n\r\n  authorization(data) {\r\n    return (\r\n      fetch(`${this._baseUrl}/signin`, {\r\n        method: \"POST\",\r\n        headers: this._headers,\r\n        body: JSON.stringify({\r\n          password: data.logInPassword,\r\n          email: data.logInEmail,\r\n        }),\r\n      })\r\n        .then((res) => {\r\n          console.log(res);\r\n          return res;\r\n        })\r\n        .then((res) => {\r\n          if (res.token) {\r\n            localStorage.setItem(\"token\", res.token);\r\n            return res;\r\n          } else {\r\n            return res;\r\n          }\r\n        })\r\n        // .then((res) => {\r\n        //   if (res.cookie.token) {\r\n        //     localStorage.setItem(\"token\", res.cookie.token);\r\n        //     return res;\r\n        //   } else {\r\n        //     return res;\r\n        //   }\r\n        // })\r\n        .then(this._checkResponse)\r\n    );\r\n  }\r\n\r\n  checkToken(token) {\r\n    return fetch(`${this._baseUrl}/users/me`, {\r\n      method: \"GET\",\r\n      headers: {\r\n        ...this._headers,\r\n        Authorization: `Bearer${token}`,\r\n      },\r\n    })\r\n      .then((res) => {\r\n        return res;\r\n      })\r\n      .then(this._checkResponse);\r\n  }\r\n}\r\n// https://api.best-site.ever.nomoredomains.work\r\nconst sendAuth = new Auth(\"http://localhost:3000\", {\r\n  // authorization: `Bearer${localStorage.getItem(\"token\")}`,\r\n  \"Content-Type\": \"application/json\",\r\n});\r\n\r\nexport default sendAuth;\r\n"]},"metadata":{},"sourceType":"module"}