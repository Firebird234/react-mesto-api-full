{"ast":null,"code":"import React from\"react\";import PopupWithForm from\"./PopupWithForm\";import{useFormAndValidation}from\"../hooks/Validation\";import{jsx as _jsx}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function EditAvatarPopup(props){var _useFormAndValidation=useFormAndValidation(),values=_useFormAndValidation.values,handleChange=_useFormAndValidation.handleChange,errors=_useFormAndValidation.errors,isValid=_useFormAndValidation.isValid,setValues=_useFormAndValidation.setValues,resetForm=_useFormAndValidation.resetForm;function handleSubmit(e){e.preventDefault();props.onUpdateUser({avatar:values.avaLink});}React.useEffect(function(){setValues({avaLink:\"\"});},[props.isOpen]);return/*#__PURE__*/_jsx(PopupWithForm// validButton={props.validity.isValid}\n,{loader:props.loader,onSubmit:handleSubmit,title:\"\\u041E\\u0431\\u043D\\u043E\\u0432\\u0438\\u0442\\u044C\\xA0\\u0430\\u0432\\u0430\\u0442\\u0430\\u0440\",name:\"card-removal\",isOpen:props.isOpen,onCloseAll:props.onClose,children:/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"input\",{value:values.avaLink||\"\",onChange:handleChange,type:\"url\",className:\"popup__field popup__field_type_link\",placeholder:\"\\u0421\\u0441\\u044B\\u043B\\u043A\\u0430 \\u043D\\u0430 \\u0430\\u0432\\u0430\\u0442\\u0430\\u0440\",name:\"avaLink\",id:\"ava-link\",required:true}),/*#__PURE__*/_jsx(\"span\",{className:\"error\",id:\"ava-link-error\",children:errors.avaLink})]})});}export default EditAvatarPopup;// import React from \"react\";\n// import PopupWithForm from \"./PopupWithForm\";\n// import { useFormAndValidation } from \"../hooks/Validation\";\n// function EditAvatarPopup(props) {\n//     const [inputData, setInputData] = React.useState({ current: \"\" });\n//     const handleChangee = (event) => {\n//         setInputData({ current: event.target.value });\n//         // props.handleValidity(event.target);\n//     };\n//     const { values, handleChange, errors, isValid, setValues, resetForm } =\n//         useFormAndValidation();\n//     function handleSubmit(e) {\n//         e.preventDefault();\n//         props.onUpdateUser({\n//             avatar: inputData.current.value,\n//         });\n//     }\n//     React.useEffect(() => {\n//         inputData.current.value = \"\";\n//     }, [props.isOpen]);\n//     return (\n//         <PopupWithForm\n//             // validButton={props.validity.isValid}\n//             loader={props.loader}\n//             onSubmit={handleSubmit}\n//             title=\"Обновить&nbsp;аватар\"\n//             name=\"card-removal\"\n//             isOpen={props.isOpen}\n//             onCloseAll={props.onClose}\n//             children={\n//                 <>\n//                     <input\n//                         value={inputData.current}\n//                         onChange={handleChangee}\n//                         ref={inputData}\n//                         type=\"url\"\n//                         className=\"popup__field popup__field_type_link\"\n//                         placeholder=\"Ссылка на аватар\"\n//                         name=\"avaLink\"\n//                         id=\"ava-link\"\n//                         required\n//                     />\n//                     <span className=\"error\" id=\"ava-link-error\">\n//                         {/* {props.validity.message.avaLink} */}\n//                     </span>\n//                 </>\n//             }\n//         />\n//     );\n// }\n// export default EditAvatarPopup;","map":{"version":3,"sources":["C:/dev/frontend/react-mesto-auth/src/components/EditAvatarPopup.js"],"names":["React","PopupWithForm","useFormAndValidation","EditAvatarPopup","props","values","handleChange","errors","isValid","setValues","resetForm","handleSubmit","e","preventDefault","onUpdateUser","avatar","avaLink","useEffect","isOpen","loader","onClose"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,aAAP,KAA0B,iBAA1B,CACA,OAASC,oBAAT,KAAqC,qBAArC,C,6IAEA,QAASC,CAAAA,eAAT,CAAyBC,KAAzB,CAAgC,CAC5B,0BACIF,oBAAoB,EADxB,CAAQG,MAAR,uBAAQA,MAAR,CAAgBC,YAAhB,uBAAgBA,YAAhB,CAA8BC,MAA9B,uBAA8BA,MAA9B,CAAsCC,OAAtC,uBAAsCA,OAAtC,CAA+CC,SAA/C,uBAA+CA,SAA/C,CAA0DC,SAA1D,uBAA0DA,SAA1D,CAGA,QAASC,CAAAA,YAAT,CAAsBC,CAAtB,CAAyB,CACrBA,CAAC,CAACC,cAAF,GACAT,KAAK,CAACU,YAAN,CAAmB,CACfC,MAAM,CAAEV,MAAM,CAACW,OADA,CAAnB,EAGH,CAEDhB,KAAK,CAACiB,SAAN,CAAgB,UAAM,CAClBR,SAAS,CAAC,CAAEO,OAAO,CAAE,EAAX,CAAD,CAAT,CACH,CAFD,CAEG,CAACZ,KAAK,CAACc,MAAP,CAFH,EAIA,mBACI,KAAC,aACG;AADJ,EAEI,MAAM,CAAEd,KAAK,CAACe,MAFlB,CAGI,QAAQ,CAAER,YAHd,CAII,KAAK,CAAC,0FAJV,CAKI,IAAI,CAAC,cALT,CAMI,MAAM,CAAEP,KAAK,CAACc,MANlB,CAOI,UAAU,CAAEd,KAAK,CAACgB,OAPtB,CAQI,QAAQ,cACJ,wCACI,cACI,KAAK,CAAEf,MAAM,CAACW,OAAP,EAAkB,EAD7B,CAEI,QAAQ,CAAEV,YAFd,CAGI,IAAI,CAAC,KAHT,CAII,SAAS,CAAC,qCAJd,CAKI,WAAW,CAAC,wFALhB,CAMI,IAAI,CAAC,SANT,CAOI,EAAE,CAAC,UAPP,CAQI,QAAQ,KARZ,EADJ,cAWI,aAAM,SAAS,CAAC,OAAhB,CAAwB,EAAE,CAAC,gBAA3B,UACKC,MAAM,CAACS,OADZ,EAXJ,GATR,EADJ,CA4BH,CAED,cAAeb,CAAAA,eAAf,CAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA","sourcesContent":["import React from \"react\";\r\nimport PopupWithForm from \"./PopupWithForm\";\r\nimport { useFormAndValidation } from \"../hooks/Validation\";\r\n\r\nfunction EditAvatarPopup(props) {\r\n    const { values, handleChange, errors, isValid, setValues, resetForm } =\r\n        useFormAndValidation();\r\n\r\n    function handleSubmit(e) {\r\n        e.preventDefault();\r\n        props.onUpdateUser({\r\n            avatar: values.avaLink,\r\n        });\r\n    }\r\n\r\n    React.useEffect(() => {\r\n        setValues({ avaLink: \"\" });\r\n    }, [props.isOpen]);\r\n\r\n    return (\r\n        <PopupWithForm\r\n            // validButton={props.validity.isValid}\r\n            loader={props.loader}\r\n            onSubmit={handleSubmit}\r\n            title=\"Обновить&nbsp;аватар\"\r\n            name=\"card-removal\"\r\n            isOpen={props.isOpen}\r\n            onCloseAll={props.onClose}\r\n            children={\r\n                <>\r\n                    <input\r\n                        value={values.avaLink || \"\"}\r\n                        onChange={handleChange}\r\n                        type=\"url\"\r\n                        className=\"popup__field popup__field_type_link\"\r\n                        placeholder=\"Ссылка на аватар\"\r\n                        name=\"avaLink\"\r\n                        id=\"ava-link\"\r\n                        required\r\n                    />\r\n                    <span className=\"error\" id=\"ava-link-error\">\r\n                        {errors.avaLink}\r\n                    </span>\r\n                </>\r\n            }\r\n        />\r\n    );\r\n}\r\n\r\nexport default EditAvatarPopup;\r\n\r\n// import React from \"react\";\r\n// import PopupWithForm from \"./PopupWithForm\";\r\n// import { useFormAndValidation } from \"../hooks/Validation\";\r\n\r\n// function EditAvatarPopup(props) {\r\n//     const [inputData, setInputData] = React.useState({ current: \"\" });\r\n\r\n//     const handleChangee = (event) => {\r\n//         setInputData({ current: event.target.value });\r\n//         // props.handleValidity(event.target);\r\n//     };\r\n//     const { values, handleChange, errors, isValid, setValues, resetForm } =\r\n//         useFormAndValidation();\r\n\r\n//     function handleSubmit(e) {\r\n//         e.preventDefault();\r\n//         props.onUpdateUser({\r\n//             avatar: inputData.current.value,\r\n//         });\r\n//     }\r\n\r\n//     React.useEffect(() => {\r\n//         inputData.current.value = \"\";\r\n//     }, [props.isOpen]);\r\n\r\n//     return (\r\n//         <PopupWithForm\r\n//             // validButton={props.validity.isValid}\r\n//             loader={props.loader}\r\n//             onSubmit={handleSubmit}\r\n//             title=\"Обновить&nbsp;аватар\"\r\n//             name=\"card-removal\"\r\n//             isOpen={props.isOpen}\r\n//             onCloseAll={props.onClose}\r\n//             children={\r\n//                 <>\r\n//                     <input\r\n//                         value={inputData.current}\r\n//                         onChange={handleChangee}\r\n//                         ref={inputData}\r\n//                         type=\"url\"\r\n//                         className=\"popup__field popup__field_type_link\"\r\n//                         placeholder=\"Ссылка на аватар\"\r\n//                         name=\"avaLink\"\r\n//                         id=\"ava-link\"\r\n//                         required\r\n//                     />\r\n//                     <span className=\"error\" id=\"ava-link-error\">\r\n//                         {/* {props.validity.message.avaLink} */}\r\n//                     </span>\r\n//                 </>\r\n//             }\r\n//         />\r\n//     );\r\n// }\r\n\r\n// export default EditAvatarPopup;\r\n"]},"metadata":{},"sourceType":"module"}