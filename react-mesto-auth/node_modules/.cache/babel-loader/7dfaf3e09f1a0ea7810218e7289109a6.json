{"ast":null,"code":"export class Api {\n  constructor(baseUrl, headers) {\n    this._baseUrl = baseUrl;\n    this._headers = headers;\n  }\n\n  getUserData() {\n    return fetch(`${this._baseUrl}/users/me`, {\n      method: \"GET\",\n      headers: this._headers\n    }).then(this._checkResponse);\n  }\n\n  getCards() {\n    return fetch(`${this._baseUrl}/cards`, {\n      method: \"GET\",\n      headers: this._headers\n    }).then(this._checkResponse);\n  }\n\n  sendUserData(data) {\n    return fetch(`${this._baseUrl}/users/me`, {\n      method: \"PATCH\",\n      headers: this._headers,\n      body: JSON.stringify({\n        name: data.name,\n        about: data.about\n      })\n    }).then(this._checkResponse);\n  }\n\n  sendUserCard(data) {\n    return fetch(`${this._baseUrl}/cards`, {\n      method: \"POST\",\n      headers: this._headers,\n      body: JSON.stringify({\n        name: data.addName,\n        link: data.addLink\n      })\n    }).then(this._checkResponse);\n  } //ЭТО ТЕСТЕР\n  //     sendUserCard() {\n  //     return fetch(`${this._baseUrl}cards`, {\n  //         method: 'POST',\n  //         headers: this._headers,\n  //         body: JSON.stringify({\n  //           name: 'EMPERROR GUIDES',\n  //           link: 'https://yobte.ru/uploads/posts/2019-11/warhammer-40000-55-foto-39.jpg'\n  //         })\n  //       })\n  //       .then(this._checkResponse);\n  // }\n\n\n  deleteCardRequest(cardId) {\n    return fetch(`${this._baseUrl}/cards/${cardId}`, {\n      method: \"DELETE\",\n      headers: this._headers\n    }).then(this._checkResponse);\n  }\n\n  pressLikeRequest(cardId) {\n    return fetch(`${this._baseUrl}/cards/likes/${cardId}`, {\n      method: \"PUT\",\n      headers: this._headers\n    }).then(this._checkResponse);\n  }\n\n  deleteLikeRequest(cardId) {\n    return fetch(`${this._baseUrl}/cards/likes/${cardId}`, {\n      method: \"DELETE\",\n      headers: this._headers\n    }).then(this._checkResponse);\n  }\n\n  changeAvatarRequest(data) {\n    return fetch(`${this._baseUrl}/users/me/avatar`, {\n      method: \"PATCH\",\n      headers: this._headers,\n      body: JSON.stringify({\n        avatar: data\n      })\n    }).then(this._checkResponse);\n  }\n\n  changeLikeCardStatus(cardId, isLiked) {\n    if (isLiked) {\n      return fetch(`${this._baseUrl}/cards/${cardId}/likes`, {\n        method: \"PUT\",\n        headers: this._headers\n      }).then(res => {\n        console.log(res);\n        return res;\n      }).then(this._checkResponse);\n    } else {\n      return fetch(`${this._baseUrl}/cards/${cardId}/likes`, {\n        method: \"DELETE\",\n        headers: this._headers\n      }).then(res => {\n        return res;\n      }).then(this._checkResponse);\n    }\n  }\n\n  _checkResponse(res) {\n    if (res.ok) {\n      return res.json();\n    }\n\n    return Promise.reject(`Ошибка ${res.status}`);\n  } // registration(link, data) {\n  //     return fetch(`${link}/signup`, {\n  //         method: \"POST\",\n  //         headers: { \"Content-Type\": \"application/json\" },\n  //         body: JSON.stringify({\n  //             password: data.registerPassword,\n  //             email: data.registerEmail,\n  //         }),\n  //     })\n  //         .then((res) => {\n  //             return res;\n  //         })\n  //         .then(this._checkResponse);\n  // }\n  // authorization(link, data) {\n  //     return fetch(`${link}/signin`, {\n  //         method: \"POST\",\n  //         headers: { \"Content-Type\": \"application/json\" },\n  //         body: JSON.stringify({\n  //             password: data.logInPassword,\n  //             email: data.logInEmail,\n  //         }),\n  //     })\n  //         .then((res) => {\n  //             console.log(res);\n  //             return res;\n  //         })\n  //         .then((res) => {\n  //             if (res.token) {\n  //                 localStorage.setItem(\"token\", res.token);\n  //                 return res;\n  //             } else {\n  //                 return res;\n  //             }\n  //         })\n  //         .then(this._checkResponse);\n  // }\n  // checkToken(link, token) {\n  //     return fetch(`${link}/users/me`, {\n  //         method: \"GET\",\n  //         headers: {\n  //             \"Content-Type\": \"application/json\",\n  //             Authorization: `Bearer ${token}`,\n  //         },\n  //     })\n  //         .then((res) => {\n  //             return res;\n  //         })\n  //         .then(this._checkResponse);\n  // }\n  //https://api.best-site.ever.nomoredomains.work\n\n\n}\nconst sendRequest = new Api(\"http://localhost:3000\", {\n  authorization: `Bearer${localStorage.getItem(\"token\")}`,\n  \"Content-Type\": \"application/json\",\n  credentials: \"include\"\n});\nexport default sendRequest;","map":{"version":3,"sources":["C:/dev/frontend/react-mesto-auth/src/utils/Api.js"],"names":["Api","constructor","baseUrl","headers","_baseUrl","_headers","getUserData","fetch","method","then","_checkResponse","getCards","sendUserData","data","body","JSON","stringify","name","about","sendUserCard","addName","link","addLink","deleteCardRequest","cardId","pressLikeRequest","deleteLikeRequest","changeAvatarRequest","avatar","changeLikeCardStatus","isLiked","res","console","log","ok","json","Promise","reject","status","sendRequest","authorization","localStorage","getItem","credentials"],"mappings":"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","sourcesContent":["export class Api {\r\n  constructor(baseUrl, headers) {\r\n    this._baseUrl = baseUrl;\r\n    this._headers = headers;\r\n  }\r\n\r\n  getUserData() {\r\n    return fetch(`${this._baseUrl}/users/me`, {\r\n      method: \"GET\",\r\n      headers: this._headers,\r\n    }).then(this._checkResponse);\r\n  }\r\n\r\n  getCards() {\r\n    return fetch(`${this._baseUrl}/cards`, {\r\n      method: \"GET\",\r\n      headers: this._headers,\r\n    }).then(this._checkResponse);\r\n  }\r\n\r\n  sendUserData(data) {\r\n    return fetch(`${this._baseUrl}/users/me`, {\r\n      method: \"PATCH\",\r\n      headers: this._headers,\r\n      body: JSON.stringify({\r\n        name: data.name,\r\n        about: data.about,\r\n      }),\r\n    }).then(this._checkResponse);\r\n  }\r\n\r\n  sendUserCard(data) {\r\n    return fetch(`${this._baseUrl}/cards`, {\r\n      method: \"POST\",\r\n      headers: this._headers,\r\n      body: JSON.stringify({\r\n        name: data.addName,\r\n        link: data.addLink,\r\n      }),\r\n    }).then(this._checkResponse);\r\n  }\r\n\r\n  //ЭТО ТЕСТЕР\r\n  //     sendUserCard() {\r\n  //     return fetch(`${this._baseUrl}cards`, {\r\n  //         method: 'POST',\r\n  //         headers: this._headers,\r\n  //         body: JSON.stringify({\r\n  //           name: 'EMPERROR GUIDES',\r\n  //           link: 'https://yobte.ru/uploads/posts/2019-11/warhammer-40000-55-foto-39.jpg'\r\n  //         })\r\n  //       })\r\n  //       .then(this._checkResponse);\r\n  // }\r\n\r\n  deleteCardRequest(cardId) {\r\n    return fetch(`${this._baseUrl}/cards/${cardId}`, {\r\n      method: \"DELETE\",\r\n      headers: this._headers,\r\n    }).then(this._checkResponse);\r\n  }\r\n\r\n  pressLikeRequest(cardId) {\r\n    return fetch(`${this._baseUrl}/cards/likes/${cardId}`, {\r\n      method: \"PUT\",\r\n      headers: this._headers,\r\n    }).then(this._checkResponse);\r\n  }\r\n\r\n  deleteLikeRequest(cardId) {\r\n    return fetch(`${this._baseUrl}/cards/likes/${cardId}`, {\r\n      method: \"DELETE\",\r\n      headers: this._headers,\r\n    }).then(this._checkResponse);\r\n  }\r\n\r\n  changeAvatarRequest(data) {\r\n    return fetch(`${this._baseUrl}/users/me/avatar`, {\r\n      method: \"PATCH\",\r\n      headers: this._headers,\r\n      body: JSON.stringify({\r\n        avatar: data,\r\n      }),\r\n    }).then(this._checkResponse);\r\n  }\r\n\r\n  changeLikeCardStatus(cardId, isLiked) {\r\n    if (isLiked) {\r\n      return fetch(`${this._baseUrl}/cards/${cardId}/likes`, {\r\n        method: \"PUT\",\r\n        headers: this._headers,\r\n      })\r\n        .then((res) => {\r\n          console.log(res);\r\n          return res;\r\n        })\r\n        .then(this._checkResponse);\r\n    } else {\r\n      return fetch(`${this._baseUrl}/cards/${cardId}/likes`, {\r\n        method: \"DELETE\",\r\n        headers: this._headers,\r\n      })\r\n        .then((res) => {\r\n          return res;\r\n        })\r\n        .then(this._checkResponse);\r\n    }\r\n  }\r\n\r\n  _checkResponse(res) {\r\n    if (res.ok) {\r\n      return res.json();\r\n    }\r\n    return Promise.reject(`Ошибка ${res.status}`);\r\n  }\r\n\r\n  // registration(link, data) {\r\n  //     return fetch(`${link}/signup`, {\r\n  //         method: \"POST\",\r\n  //         headers: { \"Content-Type\": \"application/json\" },\r\n  //         body: JSON.stringify({\r\n  //             password: data.registerPassword,\r\n  //             email: data.registerEmail,\r\n  //         }),\r\n  //     })\r\n  //         .then((res) => {\r\n  //             return res;\r\n  //         })\r\n  //         .then(this._checkResponse);\r\n  // }\r\n\r\n  // authorization(link, data) {\r\n  //     return fetch(`${link}/signin`, {\r\n  //         method: \"POST\",\r\n  //         headers: { \"Content-Type\": \"application/json\" },\r\n  //         body: JSON.stringify({\r\n  //             password: data.logInPassword,\r\n  //             email: data.logInEmail,\r\n  //         }),\r\n  //     })\r\n  //         .then((res) => {\r\n  //             console.log(res);\r\n  //             return res;\r\n  //         })\r\n  //         .then((res) => {\r\n  //             if (res.token) {\r\n  //                 localStorage.setItem(\"token\", res.token);\r\n  //                 return res;\r\n  //             } else {\r\n  //                 return res;\r\n  //             }\r\n  //         })\r\n  //         .then(this._checkResponse);\r\n  // }\r\n\r\n  // checkToken(link, token) {\r\n  //     return fetch(`${link}/users/me`, {\r\n  //         method: \"GET\",\r\n  //         headers: {\r\n  //             \"Content-Type\": \"application/json\",\r\n  //             Authorization: `Bearer ${token}`,\r\n  //         },\r\n  //     })\r\n  //         .then((res) => {\r\n  //             return res;\r\n  //         })\r\n  //         .then(this._checkResponse);\r\n  // }\r\n  //https://api.best-site.ever.nomoredomains.work\r\n}\r\n\r\nconst sendRequest = new Api(\"http://localhost:3000\", {\r\n  authorization: `Bearer${localStorage.getItem(\"token\")}`,\r\n  \"Content-Type\": \"application/json\",\r\n  credentials: \"include\",\r\n});\r\n\r\nexport default sendRequest;\r\n"]},"metadata":{},"sourceType":"module"}