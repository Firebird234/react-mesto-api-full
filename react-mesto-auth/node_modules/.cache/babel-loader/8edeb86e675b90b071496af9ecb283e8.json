{"ast":null,"code":"var _jsxFileName = \"C:\\\\dev\\\\frontend\\\\react-mesto-auth\\\\src\\\\components\\\\AddPlacePopup .js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport PopupWithForm from \"./PopupWithForm\";\nimport { useFormAndValidation } from \"../hooks/Validation\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction AddPlacePopup(props) {\n  _s();\n\n  const {\n    values,\n    handleChange,\n    errors,\n    isValid,\n    setValues,\n    resetForm\n  } = useFormAndValidation();\n\n  function handleSubmit(e) {\n    e.preventDefault(e);\n    props.onAddCard(values);\n  }\n\n  React.useEffect(() => {\n    setValues({\n      addName: \"\",\n      addLink: \"\"\n    });\n  }, [props.isOpen]);\n  return /*#__PURE__*/_jsxDEV(PopupWithForm, {\n    validButton: isValid,\n    loader: props.loader,\n    onSubmit: handleSubmit,\n    title: \"\\u041D\\u043E\\u0432\\u043E\\u0435\\xA0\\u043C\\u0435\\u0441\\u0442\\u043E\",\n    name: \"add\",\n    isOpen: props.isOpen,\n    onCloseAll: props.onClose,\n    children: /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        onChange: handleChange,\n        className: \"popup__field popup__field_type_place\",\n        placeholder: \"\\u041D\\u0430\\u0437\\u0432\\u0430\\u043D\\u0438\\u0435\",\n        name: \"addName\",\n        id: \"place\",\n        minLength: \"2\",\n        maxLength: \"30\",\n        required: true,\n        value: values.addName || \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"error\",\n        id: \"place-error\",\n        children: errors.addName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"url\",\n        onChange: handleChange,\n        className: \"popup__field popup__field_type_link\",\n        placeholder: \"\\u0421\\u0441\\u044B\\u043B\\u043A\\u0430 \\u043D\\u0430 \\u043A\\u0430\\u0440\\u0442\\u0438\\u043D\\u043A\\u0443\",\n        name: \"addLink\",\n        id: \"link\",\n        required: true,\n        value: values.addLink || \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"error\",\n        id: \"link-error\",\n        children: errors.addLink\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 9\n  }, this);\n}\n\n_s(AddPlacePopup, \"5LKwwR5wsaJXHisguNHAi4ZxWJA=\", false, function () {\n  return [useFormAndValidation];\n});\n\n_c = AddPlacePopup;\nexport default AddPlacePopup; // import React from \"react\";\n// import PopupWithForm from \"./PopupWithForm\";\n// function AddPlacePopup(props) {\n//     const [inputName, setName] = React.useState({ addName: \"\", addLink: \"\" });\n//     function handleChange(e) {\n//         setName({ ...inputName, [e.target.name]: e.target.value });\n//         console.log(inputName);\n//         props.handleValidity(e.target);\n//     }\n//     function handleSubmit(e) {\n//         e.preventDefault(e);\n//         props.onAddCard(inputName);\n//     }\n//     React.useEffect(() => {\n//         setName({ addName: \"\", addLink: \"\" });\n//     }, [props.isOpen]);\n//     return (\n//         <PopupWithForm\n//             validButton={props.validity.isValid}\n//             loader={props.loader}\n//             onSubmit={handleSubmit}\n//             title=\"Новое&nbsp;место\"\n//             name=\"add\"\n//             isOpen={props.isOpen}\n//             onCloseAll={props.onClose}\n//             children={\n//                 <>\n//                     <input\n//                         type=\"text\"\n//                         onChange={handleChange}\n//                         className=\"popup__field popup__field_type_place\"\n//                         placeholder=\"Название\"\n//                         name=\"addName\"\n//                         id=\"place\"\n//                         minLength=\"2\"\n//                         maxLength=\"30\"\n//                         required\n//                         value={inputName.addName}\n//                     />\n//                     <span className=\"error\" id=\"place-error\">\n//                         {props.validity.message.addName}\n//                     </span>\n//                     <input\n//                         type=\"url\"\n//                         onChange={handleChange}\n//                         className=\"popup__field popup__field_type_link\"\n//                         placeholder=\"Ссылка на картинку\"\n//                         name=\"addLink\"\n//                         id=\"link\"\n//                         required\n//                         value={inputName.addLink}\n//                     />\n//                     <span className=\"error\" id=\"link-error\">\n//                         {props.validity.message.addLink}\n//                     </span>\n//                 </>\n//             }\n//         />\n//     );\n// }\n// export default AddPlacePopup;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddPlacePopup\");","map":{"version":3,"sources":["C:/dev/frontend/react-mesto-auth/src/components/AddPlacePopup .js"],"names":["React","PopupWithForm","useFormAndValidation","AddPlacePopup","props","values","handleChange","errors","isValid","setValues","resetForm","handleSubmit","e","preventDefault","onAddCard","useEffect","addName","addLink","isOpen","loader","onClose"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport PopupWithForm from \"./PopupWithForm\";\r\nimport { useFormAndValidation } from \"../hooks/Validation\";\r\n\r\nfunction AddPlacePopup(props) {\r\n    const { values, handleChange, errors, isValid, setValues, resetForm } =\r\n        useFormAndValidation();\r\n\r\n    function handleSubmit(e) {\r\n        e.preventDefault(e);\r\n        props.onAddCard(values);\r\n    }\r\n\r\n    React.useEffect(() => {\r\n        setValues({ addName: \"\", addLink: \"\" });\r\n    }, [props.isOpen]);\r\n\r\n    return (\r\n        <PopupWithForm\r\n            validButton={isValid}\r\n            loader={props.loader}\r\n            onSubmit={handleSubmit}\r\n            title=\"Новое&nbsp;место\"\r\n            name=\"add\"\r\n            isOpen={props.isOpen}\r\n            onCloseAll={props.onClose}\r\n            children={\r\n                <>\r\n                    <input\r\n                        type=\"text\"\r\n                        onChange={handleChange}\r\n                        className=\"popup__field popup__field_type_place\"\r\n                        placeholder=\"Название\"\r\n                        name=\"addName\"\r\n                        id=\"place\"\r\n                        minLength=\"2\"\r\n                        maxLength=\"30\"\r\n                        required\r\n                        value={values.addName || \"\"}\r\n                    />\r\n                    <span className=\"error\" id=\"place-error\">\r\n                        {errors.addName}\r\n                    </span>\r\n                    <input\r\n                        type=\"url\"\r\n                        onChange={handleChange}\r\n                        className=\"popup__field popup__field_type_link\"\r\n                        placeholder=\"Ссылка на картинку\"\r\n                        name=\"addLink\"\r\n                        id=\"link\"\r\n                        required\r\n                        value={values.addLink || \"\"}\r\n                    />\r\n                    <span className=\"error\" id=\"link-error\">\r\n                        {errors.addLink}\r\n                    </span>\r\n                </>\r\n            }\r\n        />\r\n    );\r\n}\r\n\r\nexport default AddPlacePopup;\r\n\r\n// import React from \"react\";\r\n// import PopupWithForm from \"./PopupWithForm\";\r\n\r\n// function AddPlacePopup(props) {\r\n//     const [inputName, setName] = React.useState({ addName: \"\", addLink: \"\" });\r\n\r\n//     function handleChange(e) {\r\n//         setName({ ...inputName, [e.target.name]: e.target.value });\r\n//         console.log(inputName);\r\n//         props.handleValidity(e.target);\r\n//     }\r\n\r\n//     function handleSubmit(e) {\r\n//         e.preventDefault(e);\r\n//         props.onAddCard(inputName);\r\n//     }\r\n\r\n//     React.useEffect(() => {\r\n//         setName({ addName: \"\", addLink: \"\" });\r\n//     }, [props.isOpen]);\r\n\r\n//     return (\r\n//         <PopupWithForm\r\n//             validButton={props.validity.isValid}\r\n//             loader={props.loader}\r\n//             onSubmit={handleSubmit}\r\n//             title=\"Новое&nbsp;место\"\r\n//             name=\"add\"\r\n//             isOpen={props.isOpen}\r\n//             onCloseAll={props.onClose}\r\n//             children={\r\n//                 <>\r\n//                     <input\r\n//                         type=\"text\"\r\n//                         onChange={handleChange}\r\n//                         className=\"popup__field popup__field_type_place\"\r\n//                         placeholder=\"Название\"\r\n//                         name=\"addName\"\r\n//                         id=\"place\"\r\n//                         minLength=\"2\"\r\n//                         maxLength=\"30\"\r\n//                         required\r\n//                         value={inputName.addName}\r\n//                     />\r\n//                     <span className=\"error\" id=\"place-error\">\r\n//                         {props.validity.message.addName}\r\n//                     </span>\r\n//                     <input\r\n//                         type=\"url\"\r\n//                         onChange={handleChange}\r\n//                         className=\"popup__field popup__field_type_link\"\r\n//                         placeholder=\"Ссылка на картинку\"\r\n//                         name=\"addLink\"\r\n//                         id=\"link\"\r\n//                         required\r\n//                         value={inputName.addLink}\r\n//                     />\r\n//                     <span className=\"error\" id=\"link-error\">\r\n//                         {props.validity.message.addLink}\r\n//                     </span>\r\n//                 </>\r\n//             }\r\n//         />\r\n//     );\r\n// }\r\n\r\n// export default AddPlacePopup;\r\n"]},"metadata":{},"sourceType":"module"}