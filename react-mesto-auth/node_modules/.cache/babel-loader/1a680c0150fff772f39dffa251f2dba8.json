{"ast":null,"code":"import _classCallCheck from\"C:/dev/frontend/react-mesto-auth/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"C:/dev/frontend/react-mesto-auth/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";export var Api=/*#__PURE__*/function(){function Api(baseUrl,headers){_classCallCheck(this,Api);this._baseUrl=baseUrl;this._headers=headers;}_createClass(Api,[{key:\"getUserData\",value:function getUserData(){return fetch(\"\".concat(this._baseUrl,\"users/me\"),{method:\"GET\",headers:this._headers}).then(this._checkResponse);}},{key:\"getCards\",value:function getCards(){return fetch(\"\".concat(this._baseUrl,\"cards\"),{method:\"GET\",headers:this._headers}).then(this._checkResponse);}},{key:\"sendUserData\",value:function sendUserData(data){return fetch(\"\".concat(this._baseUrl,\"users/me\"),{method:\"PATCH\",headers:this._headers,body:JSON.stringify({name:data.name,about:data.about})}).then(this._checkResponse);}},{key:\"sendUserCard\",value:function sendUserCard(data){return fetch(\"\".concat(this._baseUrl,\"cards\"),{method:\"POST\",headers:this._headers,body:JSON.stringify({name:data.addName,link:data.addLink})}).then(this._checkResponse);}//ЭТО ТЕСТЕР\n//     sendUserCard() {\n//     return fetch(`${this._baseUrl}cards`, {\n//         method: 'POST',\n//         headers: this._headers,\n//         body: JSON.stringify({\n//           name: 'EMPERROR GUIDES',\n//           link: 'https://yobte.ru/uploads/posts/2019-11/warhammer-40000-55-foto-39.jpg'\n//         })\n//       })\n//       .then(this._checkResponse);\n// }\n},{key:\"deleteCardRequest\",value:function deleteCardRequest(cardId){return fetch(\"\".concat(this._baseUrl,\"cards/\").concat(cardId),{method:\"DELETE\",headers:this._headers}).then(this._checkResponse);}},{key:\"pressLikeRequest\",value:function pressLikeRequest(cardId){return fetch(\"\".concat(this._baseUrl,\"cards/likes/\").concat(cardId),{method:\"PUT\",headers:this._headers}).then(this._checkResponse);}},{key:\"deleteLikeRequest\",value:function deleteLikeRequest(cardId){return fetch(\"\".concat(this._baseUrl,\"cards/likes/\").concat(cardId),{method:\"DELETE\",headers:this._headers}).then(this._checkResponse);}},{key:\"changeAvatarRequest\",value:function changeAvatarRequest(data){return fetch(\"\".concat(this._baseUrl,\"users/me/avatar\"),{method:\"PATCH\",headers:this._headers,body:JSON.stringify({avatar:data})}).then(this._checkResponse);}},{key:\"changeLikeCardStatus\",value:function changeLikeCardStatus(cardId,isLiked){if(isLiked){return fetch(\"\".concat(this._baseUrl,\"cards/likes/\").concat(cardId),{method:\"PUT\",headers:this._headers}).then(function(res){console.log(res);return res;}).then(this._checkResponse);}else{return fetch(\"\".concat(this._baseUrl,\"cards/likes/\").concat(cardId),{method:\"DELETE\",headers:this._headers}).then(function(res){return res;}).then(this._checkResponse);}}},{key:\"_checkResponse\",value:function _checkResponse(res){if(res.ok){return res.json();}return Promise.reject(\"\\u041E\\u0448\\u0438\\u0431\\u043A\\u0430 \".concat(res.status));}// registration(link, data) {\n//     return fetch(`${link}/signup`, {\n//         method: \"POST\",\n//         headers: { \"Content-Type\": \"application/json\" },\n//         body: JSON.stringify({\n//             password: data.registerPassword,\n//             email: data.registerEmail,\n//         }),\n//     })\n//         .then((res) => {\n//             return res;\n//         })\n//         .then(this._checkResponse);\n// }\n// authorization(link, data) {\n//     return fetch(`${link}/signin`, {\n//         method: \"POST\",\n//         headers: { \"Content-Type\": \"application/json\" },\n//         body: JSON.stringify({\n//             password: data.logInPassword,\n//             email: data.logInEmail,\n//         }),\n//     })\n//         .then((res) => {\n//             console.log(res);\n//             return res;\n//         })\n//         .then((res) => {\n//             if (res.token) {\n//                 localStorage.setItem(\"token\", res.token);\n//                 return res;\n//             } else {\n//                 return res;\n//             }\n//         })\n//         .then(this._checkResponse);\n// }\n// checkToken(link, token) {\n//     return fetch(`${link}/users/me`, {\n//         method: \"GET\",\n//         headers: {\n//             \"Content-Type\": \"application/json\",\n//             Authorization: `Bearer ${token}`,\n//         },\n//     })\n//         .then((res) => {\n//             return res;\n//         })\n//         .then(this._checkResponse);\n// }\n}]);return Api;}();var sendRequest=new Api(\"https://mesto.nomoreparties.co/v1/cohort-28/\",{authorization:\"7623580f-b1ba-482c-8170-fbcdd1434884\",\"Content-Type\":\"application/json\"});export default sendRequest;","map":{"version":3,"sources":["C:/dev/frontend/react-mesto-auth/src/utils/Api.js"],"names":["Api","baseUrl","headers","_baseUrl","_headers","fetch","method","then","_checkResponse","data","body","JSON","stringify","name","about","addName","link","addLink","cardId","avatar","isLiked","res","console","log","ok","json","Promise","reject","status","sendRequest","authorization"],"mappings":"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,CAAS,CACX,MAAOA,CAAAA,GAAP,CACH,CANE,EAOFd,IAPE,CAOG,KAAKC,cAPR,CAAP,CAQH,CACJ,CA3GL,8BA6GI,wBAAea,GAAf,CAAoB,CAChB,GAAIA,GAAG,CAACG,EAAR,CAAY,CACR,MAAOH,CAAAA,GAAG,CAACI,IAAJ,EAAP,CACH,CACD,MAAOC,CAAAA,OAAO,CAACC,MAAR,gDAAyBN,GAAG,CAACO,MAA7B,EAAP,CACH,CAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAvKJ,mBA0KA,GAAMC,CAAAA,WAAW,CAAG,GAAI7B,CAAAA,GAAJ,CAAQ,8CAAR,CAAwD,CACxE8B,aAAa,CAAE,sCADyD,CAExE,eAAgB,kBAFwD,CAAxD,CAApB,CAKA,cAAeD,CAAAA,WAAf","sourcesContent":["export class Api {\r\n    constructor(baseUrl, headers) {\r\n        this._baseUrl = baseUrl;\r\n        this._headers = headers;\r\n    }\r\n\r\n    getUserData() {\r\n        return fetch(`${this._baseUrl}users/me`, {\r\n            method: \"GET\",\r\n            headers: this._headers,\r\n        }).then(this._checkResponse);\r\n    }\r\n\r\n    getCards() {\r\n        return fetch(`${this._baseUrl}cards`, {\r\n            method: \"GET\",\r\n            headers: this._headers,\r\n        }).then(this._checkResponse);\r\n    }\r\n\r\n    sendUserData(data) {\r\n        return fetch(`${this._baseUrl}users/me`, {\r\n            method: \"PATCH\",\r\n            headers: this._headers,\r\n            body: JSON.stringify({\r\n                name: data.name,\r\n                about: data.about,\r\n            }),\r\n        }).then(this._checkResponse);\r\n    }\r\n\r\n    sendUserCard(data) {\r\n        return fetch(`${this._baseUrl}cards`, {\r\n            method: \"POST\",\r\n            headers: this._headers,\r\n            body: JSON.stringify({\r\n                name: data.addName,\r\n                link: data.addLink,\r\n            }),\r\n        }).then(this._checkResponse);\r\n    }\r\n\r\n    //ЭТО ТЕСТЕР\r\n    //     sendUserCard() {\r\n    //     return fetch(`${this._baseUrl}cards`, {\r\n    //         method: 'POST',\r\n    //         headers: this._headers,\r\n    //         body: JSON.stringify({\r\n    //           name: 'EMPERROR GUIDES',\r\n    //           link: 'https://yobte.ru/uploads/posts/2019-11/warhammer-40000-55-foto-39.jpg'\r\n    //         })\r\n    //       })\r\n    //       .then(this._checkResponse);\r\n    // }\r\n\r\n    deleteCardRequest(cardId) {\r\n        return fetch(`${this._baseUrl}cards/${cardId}`, {\r\n            method: \"DELETE\",\r\n            headers: this._headers,\r\n        }).then(this._checkResponse);\r\n    }\r\n\r\n    pressLikeRequest(cardId) {\r\n        return fetch(`${this._baseUrl}cards/likes/${cardId}`, {\r\n            method: \"PUT\",\r\n            headers: this._headers,\r\n        }).then(this._checkResponse);\r\n    }\r\n\r\n    deleteLikeRequest(cardId) {\r\n        return fetch(`${this._baseUrl}cards/likes/${cardId}`, {\r\n            method: \"DELETE\",\r\n            headers: this._headers,\r\n        }).then(this._checkResponse);\r\n    }\r\n\r\n    changeAvatarRequest(data) {\r\n        return fetch(`${this._baseUrl}users/me/avatar`, {\r\n            method: \"PATCH\",\r\n            headers: this._headers,\r\n            body: JSON.stringify({\r\n                avatar: data,\r\n            }),\r\n        }).then(this._checkResponse);\r\n    }\r\n\r\n    changeLikeCardStatus(cardId, isLiked) {\r\n        if (isLiked) {\r\n            return fetch(`${this._baseUrl}cards/likes/${cardId}`, {\r\n                method: \"PUT\",\r\n                headers: this._headers,\r\n            })\r\n                .then((res) => {\r\n                    console.log(res);\r\n                    return res;\r\n                })\r\n                .then(this._checkResponse);\r\n        } else {\r\n            return fetch(`${this._baseUrl}cards/likes/${cardId}`, {\r\n                method: \"DELETE\",\r\n                headers: this._headers,\r\n            })\r\n                .then((res) => {\r\n                    return res;\r\n                })\r\n                .then(this._checkResponse);\r\n        }\r\n    }\r\n\r\n    _checkResponse(res) {\r\n        if (res.ok) {\r\n            return res.json();\r\n        }\r\n        return Promise.reject(`Ошибка ${res.status}`);\r\n    }\r\n\r\n    // registration(link, data) {\r\n    //     return fetch(`${link}/signup`, {\r\n    //         method: \"POST\",\r\n    //         headers: { \"Content-Type\": \"application/json\" },\r\n    //         body: JSON.stringify({\r\n    //             password: data.registerPassword,\r\n    //             email: data.registerEmail,\r\n    //         }),\r\n    //     })\r\n    //         .then((res) => {\r\n    //             return res;\r\n    //         })\r\n    //         .then(this._checkResponse);\r\n    // }\r\n\r\n    // authorization(link, data) {\r\n    //     return fetch(`${link}/signin`, {\r\n    //         method: \"POST\",\r\n    //         headers: { \"Content-Type\": \"application/json\" },\r\n    //         body: JSON.stringify({\r\n    //             password: data.logInPassword,\r\n    //             email: data.logInEmail,\r\n    //         }),\r\n    //     })\r\n    //         .then((res) => {\r\n    //             console.log(res);\r\n    //             return res;\r\n    //         })\r\n    //         .then((res) => {\r\n    //             if (res.token) {\r\n    //                 localStorage.setItem(\"token\", res.token);\r\n    //                 return res;\r\n    //             } else {\r\n    //                 return res;\r\n    //             }\r\n    //         })\r\n    //         .then(this._checkResponse);\r\n    // }\r\n\r\n    // checkToken(link, token) {\r\n    //     return fetch(`${link}/users/me`, {\r\n    //         method: \"GET\",\r\n    //         headers: {\r\n    //             \"Content-Type\": \"application/json\",\r\n    //             Authorization: `Bearer ${token}`,\r\n    //         },\r\n    //     })\r\n    //         .then((res) => {\r\n    //             return res;\r\n    //         })\r\n    //         .then(this._checkResponse);\r\n    // }\r\n}\r\n\r\nconst sendRequest = new Api(\"https://mesto.nomoreparties.co/v1/cohort-28/\", {\r\n    authorization: \"7623580f-b1ba-482c-8170-fbcdd1434884\",\r\n    \"Content-Type\": \"application/json\",\r\n});\r\n\r\nexport default sendRequest;\r\n"]},"metadata":{},"sourceType":"module"}