{"ast":null,"code":"import _objectSpread from\"C:/dev/frontend/react-mesto-auth/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _classCallCheck from\"C:/dev/frontend/react-mesto-auth/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"C:/dev/frontend/react-mesto-auth/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";export var Auth=/*#__PURE__*/function(){function Auth(baseUrl,headers){_classCallCheck(this,Auth);this._baseUrl=baseUrl;this._headers=headers;}_createClass(Auth,[{key:\"_checkResponse\",value:function _checkResponse(res){if(res.ok){return res.json();}return Promise.reject(\"\\u041E\\u0448\\u0438\\u0431\\u043A\\u0430 \".concat(res.status));}},{key:\"registration\",value:function registration(data){return fetch(\"\".concat(this._baseUrl,\"/signup\"),{method:\"POST\",headers:this._headers,body:JSON.stringify({password:data.registerPassword,email:data.registerEmail})}).then(function(res){return res;}).then(this._checkResponse);}},{key:\"authorization\",value:function authorization(data){return fetch(\"\".concat(this._baseUrl,\"/signin\"),{method:\"POST\",headers:this._headers,body:JSON.stringify({password:data.logInPassword,email:data.logInEmail})}).then(function(res){console.log(res);return res;}).then(function(res){if(res.token){localStorage.setItem(\"token\",res.token);return res;}else{return res;}}).then(this._checkResponse);}},{key:\"checkToken\",value:function checkToken(token){return fetch(\"\".concat(this._baseUrl,\"/users/me\"),{method:\"GET\",headers:_objectSpread(_objectSpread({},this._headers),{},{Authorization:\"Bearer \".concat(token)})}).then(function(res){return res;}).then(this._checkResponse);}}]);return Auth;}();var sendAuth=new Auth(\"https://auth.nomoreparties.co\",{\"Content-Type\":\"application/json\"});export default sendAuth;","map":{"version":3,"sources":["C:/dev/frontend/react-mesto-auth/src/utils/Auth.js"],"names":["Auth","baseUrl","headers","_baseUrl","_headers","res","ok","json","Promise","reject","status","data","fetch","method","body","JSON","stringify","password","registerPassword","email","registerEmail","then","_checkResponse","logInPassword","logInEmail","console","log","token","localStorage","setItem","Authorization","sendAuth"],"mappings":"kcAAA,UAAaA,CAAAA,IAAb,yBACI,cAAYC,OAAZ,CAAqBC,OAArB,CAA8B,4BAC1B,KAAKC,QAAL,CAAgBF,OAAhB,CACA,KAAKG,QAAL,CAAgBF,OAAhB,CACH,CAJL,+CAMI,wBAAeG,GAAf,CAAoB,CAChB,GAAIA,GAAG,CAACC,EAAR,CAAY,CACR,MAAOD,CAAAA,GAAG,CAACE,IAAJ,EAAP,CACH,CACD,MAAOC,CAAAA,OAAO,CAACC,MAAR,gDAAyBJ,GAAG,CAACK,MAA7B,EAAP,CACH,CAXL,4BAaI,sBAAaC,IAAb,CAAmB,CACf,MAAOC,CAAAA,KAAK,WAAI,KAAKT,QAAT,YAA4B,CACpCU,MAAM,CAAE,MAD4B,CAEpCX,OAAO,CAAE,KAAKE,QAFsB,CAGpCU,IAAI,CAAEC,IAAI,CAACC,SAAL,CAAe,CACjBC,QAAQ,CAAEN,IAAI,CAACO,gBADE,CAEjBC,KAAK,CAAER,IAAI,CAACS,aAFK,CAAf,CAH8B,CAA5B,CAAL,CAQFC,IARE,CAQG,SAAChB,GAAD,CAAS,CACX,MAAOA,CAAAA,GAAP,CACH,CAVE,EAWFgB,IAXE,CAWG,KAAKC,cAXR,CAAP,CAYH,CA1BL,6BA4BI,uBAAcX,IAAd,CAAoB,CAChB,MAAOC,CAAAA,KAAK,WAAI,KAAKT,QAAT,YAA4B,CACpCU,MAAM,CAAE,MAD4B,CAEpCX,OAAO,CAAE,KAAKE,QAFsB,CAGpCU,IAAI,CAAEC,IAAI,CAACC,SAAL,CAAe,CACjBC,QAAQ,CAAEN,IAAI,CAACY,aADE,CAEjBJ,KAAK,CAAER,IAAI,CAACa,UAFK,CAAf,CAH8B,CAA5B,CAAL,CAQFH,IARE,CAQG,SAAChB,GAAD,CAAS,CACXoB,OAAO,CAACC,GAAR,CAAYrB,GAAZ,EACA,MAAOA,CAAAA,GAAP,CACH,CAXE,EAYFgB,IAZE,CAYG,SAAChB,GAAD,CAAS,CACX,GAAIA,GAAG,CAACsB,KAAR,CAAe,CACXC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAA8BxB,GAAG,CAACsB,KAAlC,EACA,MAAOtB,CAAAA,GAAP,CACH,CAHD,IAGO,CACH,MAAOA,CAAAA,GAAP,CACH,CACJ,CAnBE,EAoBFgB,IApBE,CAoBG,KAAKC,cApBR,CAAP,CAqBH,CAlDL,0BAoDI,oBAAWK,KAAX,CAAkB,CACd,MAAOf,CAAAA,KAAK,WAAI,KAAKT,QAAT,cAA8B,CACtCU,MAAM,CAAE,KAD8B,CAEtCX,OAAO,gCACA,KAAKE,QADL,MAEH0B,aAAa,kBAAYH,KAAZ,CAFV,EAF+B,CAA9B,CAAL,CAOFN,IAPE,CAOG,SAAChB,GAAD,CAAS,CACX,MAAOA,CAAAA,GAAP,CACH,CATE,EAUFgB,IAVE,CAUG,KAAKC,cAVR,CAAP,CAWH,CAhEL,oBAmEA,GAAMS,CAAAA,QAAQ,CAAG,GAAI/B,CAAAA,IAAJ,CAAS,+BAAT,CAA0C,CACvD,eAAgB,kBADuC,CAA1C,CAAjB,CAIA,cAAe+B,CAAAA,QAAf","sourcesContent":["export class Auth {\r\n    constructor(baseUrl, headers) {\r\n        this._baseUrl = baseUrl;\r\n        this._headers = headers;\r\n    }\r\n\r\n    _checkResponse(res) {\r\n        if (res.ok) {\r\n            return res.json();\r\n        }\r\n        return Promise.reject(`Ошибка ${res.status}`);\r\n    }\r\n\r\n    registration(data) {\r\n        return fetch(`${this._baseUrl}/signup`, {\r\n            method: \"POST\",\r\n            headers: this._headers,\r\n            body: JSON.stringify({\r\n                password: data.registerPassword,\r\n                email: data.registerEmail,\r\n            }),\r\n        })\r\n            .then((res) => {\r\n                return res;\r\n            })\r\n            .then(this._checkResponse);\r\n    }\r\n\r\n    authorization(data) {\r\n        return fetch(`${this._baseUrl}/signin`, {\r\n            method: \"POST\",\r\n            headers: this._headers,\r\n            body: JSON.stringify({\r\n                password: data.logInPassword,\r\n                email: data.logInEmail,\r\n            }),\r\n        })\r\n            .then((res) => {\r\n                console.log(res);\r\n                return res;\r\n            })\r\n            .then((res) => {\r\n                if (res.token) {\r\n                    localStorage.setItem(\"token\", res.token);\r\n                    return res;\r\n                } else {\r\n                    return res;\r\n                }\r\n            })\r\n            .then(this._checkResponse);\r\n    }\r\n\r\n    checkToken(token) {\r\n        return fetch(`${this._baseUrl}/users/me`, {\r\n            method: \"GET\",\r\n            headers: {\r\n                ...this._headers,\r\n                Authorization: `Bearer ${token}`,\r\n            },\r\n        })\r\n            .then((res) => {\r\n                return res;\r\n            })\r\n            .then(this._checkResponse);\r\n    }\r\n}\r\n\r\nconst sendAuth = new Auth(\"https://auth.nomoreparties.co\", {\r\n    \"Content-Type\": \"application/json\",\r\n});\r\n\r\nexport default sendAuth;\r\n"]},"metadata":{},"sourceType":"module"}