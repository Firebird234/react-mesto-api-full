{"ast":null,"code":"import React from\"react\";import PopupWithForm from\"./PopupWithForm\";import{useFormAndValidation}from\"../hooks/Validation\";import{jsx as _jsx}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function AddPlacePopup(props){var _useFormAndValidation=useFormAndValidation(),values=_useFormAndValidation.values,handleChange=_useFormAndValidation.handleChange,errors=_useFormAndValidation.errors,isValid=_useFormAndValidation.isValid,setValues=_useFormAndValidation.setValues,resetForm=_useFormAndValidation.resetForm;function handleSubmit(e){e.preventDefault(e);props.onAddCard(values);}React.useEffect(function(){setValues({addName:\"\",addLink:\"\"});},[props.isOpen]);return/*#__PURE__*/_jsx(PopupWithForm,{validButton:isValid,loader:props.loader,onSubmit:handleSubmit,title:\"\\u041D\\u043E\\u0432\\u043E\\u0435\\xA0\\u043C\\u0435\\u0441\\u0442\\u043E\",name:\"add\",isOpen:props.isOpen,onCloseAll:props.onClose,children:/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",onChange:handleChange,className:\"popup__field popup__field_type_place\",placeholder:\"\\u041D\\u0430\\u0437\\u0432\\u0430\\u043D\\u0438\\u0435\",name:\"addName\",id:\"place\",minLength:\"2\",maxLength:\"30\",required:true,value:values.addName||\"\"}),/*#__PURE__*/_jsx(\"span\",{className:\"error\",id:\"place-error\",children:errors.addName}),/*#__PURE__*/_jsx(\"input\",{type:\"url\",onChange:handleChange,className:\"popup__field popup__field_type_link\",placeholder:\"\\u0421\\u0441\\u044B\\u043B\\u043A\\u0430 \\u043D\\u0430 \\u043A\\u0430\\u0440\\u0442\\u0438\\u043D\\u043A\\u0443\",name:\"addLink\",id:\"link\",required:true,value:values.addLink||\"\"}),/*#__PURE__*/_jsx(\"span\",{className:\"error\",id:\"link-error\",children:errors.addLink})]})});}export default AddPlacePopup;// import React from \"react\";\n// import PopupWithForm from \"./PopupWithForm\";\n// function AddPlacePopup(props) {\n//     const [inputName, setName] = React.useState({ addName: \"\", addLink: \"\" });\n//     function handleChange(e) {\n//         setName({ ...inputName, [e.target.name]: e.target.value });\n//         console.log(inputName);\n//         props.handleValidity(e.target);\n//     }\n//     function handleSubmit(e) {\n//         e.preventDefault(e);\n//         props.onAddCard(inputName);\n//     }\n//     React.useEffect(() => {\n//         setName({ addName: \"\", addLink: \"\" });\n//     }, [props.isOpen]);\n//     return (\n//         <PopupWithForm\n//             validButton={props.validity.isValid}\n//             loader={props.loader}\n//             onSubmit={handleSubmit}\n//             title=\"Новое&nbsp;место\"\n//             name=\"add\"\n//             isOpen={props.isOpen}\n//             onCloseAll={props.onClose}\n//             children={\n//                 <>\n//                     <input\n//                         type=\"text\"\n//                         onChange={handleChange}\n//                         className=\"popup__field popup__field_type_place\"\n//                         placeholder=\"Название\"\n//                         name=\"addName\"\n//                         id=\"place\"\n//                         minLength=\"2\"\n//                         maxLength=\"30\"\n//                         required\n//                         value={inputName.addName}\n//                     />\n//                     <span className=\"error\" id=\"place-error\">\n//                         {props.validity.message.addName}\n//                     </span>\n//                     <input\n//                         type=\"url\"\n//                         onChange={handleChange}\n//                         className=\"popup__field popup__field_type_link\"\n//                         placeholder=\"Ссылка на картинку\"\n//                         name=\"addLink\"\n//                         id=\"link\"\n//                         required\n//                         value={inputName.addLink}\n//                     />\n//                     <span className=\"error\" id=\"link-error\">\n//                         {props.validity.message.addLink}\n//                     </span>\n//                 </>\n//             }\n//         />\n//     );\n// }\n// export default AddPlacePopup;","map":{"version":3,"sources":["C:/dev/frontend/react-mesto-auth/src/components/AddPlacePopup .js"],"names":["React","PopupWithForm","useFormAndValidation","AddPlacePopup","props","values","handleChange","errors","isValid","setValues","resetForm","handleSubmit","e","preventDefault","onAddCard","useEffect","addName","addLink","isOpen","loader","onClose"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,aAAP,KAA0B,iBAA1B,CACA,OAASC,oBAAT,KAAqC,qBAArC,C,6IAEA,QAASC,CAAAA,aAAT,CAAuBC,KAAvB,CAA8B,CAC1B,0BACIF,oBAAoB,EADxB,CAAQG,MAAR,uBAAQA,MAAR,CAAgBC,YAAhB,uBAAgBA,YAAhB,CAA8BC,MAA9B,uBAA8BA,MAA9B,CAAsCC,OAAtC,uBAAsCA,OAAtC,CAA+CC,SAA/C,uBAA+CA,SAA/C,CAA0DC,SAA1D,uBAA0DA,SAA1D,CAGA,QAASC,CAAAA,YAAT,CAAsBC,CAAtB,CAAyB,CACrBA,CAAC,CAACC,cAAF,CAAiBD,CAAjB,EACAR,KAAK,CAACU,SAAN,CAAgBT,MAAhB,EACH,CAEDL,KAAK,CAACe,SAAN,CAAgB,UAAM,CAClBN,SAAS,CAAC,CAAEO,OAAO,CAAE,EAAX,CAAeC,OAAO,CAAE,EAAxB,CAAD,CAAT,CACH,CAFD,CAEG,CAACb,KAAK,CAACc,MAAP,CAFH,EAIA,mBACI,KAAC,aAAD,EACI,WAAW,CAAEV,OADjB,CAEI,MAAM,CAAEJ,KAAK,CAACe,MAFlB,CAGI,QAAQ,CAAER,YAHd,CAII,KAAK,CAAC,kEAJV,CAKI,IAAI,CAAC,KALT,CAMI,MAAM,CAAEP,KAAK,CAACc,MANlB,CAOI,UAAU,CAAEd,KAAK,CAACgB,OAPtB,CAQI,QAAQ,cACJ,wCACI,cACI,IAAI,CAAC,MADT,CAEI,QAAQ,CAAEd,YAFd,CAGI,SAAS,CAAC,sCAHd,CAII,WAAW,CAAC,kDAJhB,CAKI,IAAI,CAAC,SALT,CAMI,EAAE,CAAC,OANP,CAOI,SAAS,CAAC,GAPd,CAQI,SAAS,CAAC,IARd,CASI,QAAQ,KATZ,CAUI,KAAK,CAAED,MAAM,CAACW,OAAP,EAAkB,EAV7B,EADJ,cAaI,aAAM,SAAS,CAAC,OAAhB,CAAwB,EAAE,CAAC,aAA3B,UACKT,MAAM,CAACS,OADZ,EAbJ,cAgBI,cACI,IAAI,CAAC,KADT,CAEI,QAAQ,CAAEV,YAFd,CAGI,SAAS,CAAC,qCAHd,CAII,WAAW,CAAC,oGAJhB,CAKI,IAAI,CAAC,SALT,CAMI,EAAE,CAAC,MANP,CAOI,QAAQ,KAPZ,CAQI,KAAK,CAAED,MAAM,CAACY,OAAP,EAAkB,EAR7B,EAhBJ,cA0BI,aAAM,SAAS,CAAC,OAAhB,CAAwB,EAAE,CAAC,YAA3B,UACKV,MAAM,CAACU,OADZ,EA1BJ,GATR,EADJ,CA2CH,CAED,cAAed,CAAAA,aAAf,CAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA","sourcesContent":["import React from \"react\";\r\nimport PopupWithForm from \"./PopupWithForm\";\r\nimport { useFormAndValidation } from \"../hooks/Validation\";\r\n\r\nfunction AddPlacePopup(props) {\r\n    const { values, handleChange, errors, isValid, setValues, resetForm } =\r\n        useFormAndValidation();\r\n\r\n    function handleSubmit(e) {\r\n        e.preventDefault(e);\r\n        props.onAddCard(values);\r\n    }\r\n\r\n    React.useEffect(() => {\r\n        setValues({ addName: \"\", addLink: \"\" });\r\n    }, [props.isOpen]);\r\n\r\n    return (\r\n        <PopupWithForm\r\n            validButton={isValid}\r\n            loader={props.loader}\r\n            onSubmit={handleSubmit}\r\n            title=\"Новое&nbsp;место\"\r\n            name=\"add\"\r\n            isOpen={props.isOpen}\r\n            onCloseAll={props.onClose}\r\n            children={\r\n                <>\r\n                    <input\r\n                        type=\"text\"\r\n                        onChange={handleChange}\r\n                        className=\"popup__field popup__field_type_place\"\r\n                        placeholder=\"Название\"\r\n                        name=\"addName\"\r\n                        id=\"place\"\r\n                        minLength=\"2\"\r\n                        maxLength=\"30\"\r\n                        required\r\n                        value={values.addName || \"\"}\r\n                    />\r\n                    <span className=\"error\" id=\"place-error\">\r\n                        {errors.addName}\r\n                    </span>\r\n                    <input\r\n                        type=\"url\"\r\n                        onChange={handleChange}\r\n                        className=\"popup__field popup__field_type_link\"\r\n                        placeholder=\"Ссылка на картинку\"\r\n                        name=\"addLink\"\r\n                        id=\"link\"\r\n                        required\r\n                        value={values.addLink || \"\"}\r\n                    />\r\n                    <span className=\"error\" id=\"link-error\">\r\n                        {errors.addLink}\r\n                    </span>\r\n                </>\r\n            }\r\n        />\r\n    );\r\n}\r\n\r\nexport default AddPlacePopup;\r\n\r\n// import React from \"react\";\r\n// import PopupWithForm from \"./PopupWithForm\";\r\n\r\n// function AddPlacePopup(props) {\r\n//     const [inputName, setName] = React.useState({ addName: \"\", addLink: \"\" });\r\n\r\n//     function handleChange(e) {\r\n//         setName({ ...inputName, [e.target.name]: e.target.value });\r\n//         console.log(inputName);\r\n//         props.handleValidity(e.target);\r\n//     }\r\n\r\n//     function handleSubmit(e) {\r\n//         e.preventDefault(e);\r\n//         props.onAddCard(inputName);\r\n//     }\r\n\r\n//     React.useEffect(() => {\r\n//         setName({ addName: \"\", addLink: \"\" });\r\n//     }, [props.isOpen]);\r\n\r\n//     return (\r\n//         <PopupWithForm\r\n//             validButton={props.validity.isValid}\r\n//             loader={props.loader}\r\n//             onSubmit={handleSubmit}\r\n//             title=\"Новое&nbsp;место\"\r\n//             name=\"add\"\r\n//             isOpen={props.isOpen}\r\n//             onCloseAll={props.onClose}\r\n//             children={\r\n//                 <>\r\n//                     <input\r\n//                         type=\"text\"\r\n//                         onChange={handleChange}\r\n//                         className=\"popup__field popup__field_type_place\"\r\n//                         placeholder=\"Название\"\r\n//                         name=\"addName\"\r\n//                         id=\"place\"\r\n//                         minLength=\"2\"\r\n//                         maxLength=\"30\"\r\n//                         required\r\n//                         value={inputName.addName}\r\n//                     />\r\n//                     <span className=\"error\" id=\"place-error\">\r\n//                         {props.validity.message.addName}\r\n//                     </span>\r\n//                     <input\r\n//                         type=\"url\"\r\n//                         onChange={handleChange}\r\n//                         className=\"popup__field popup__field_type_link\"\r\n//                         placeholder=\"Ссылка на картинку\"\r\n//                         name=\"addLink\"\r\n//                         id=\"link\"\r\n//                         required\r\n//                         value={inputName.addLink}\r\n//                     />\r\n//                     <span className=\"error\" id=\"link-error\">\r\n//                         {props.validity.message.addLink}\r\n//                     </span>\r\n//                 </>\r\n//             }\r\n//         />\r\n//     );\r\n// }\r\n\r\n// export default AddPlacePopup;\r\n"]},"metadata":{},"sourceType":"module"}