{"ast":null,"code":"var _jsxFileName = \"C:\\\\dev\\\\frontend\\\\react-mesto-auth\\\\src\\\\components\\\\EditAvatarPopup.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport PopupWithForm from \"./PopupWithForm\";\nimport { useFormAndValidation } from \"../hooks/Validation\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction EditAvatarPopup(props) {\n  _s();\n\n  const {\n    values,\n    handleChange,\n    errors,\n    isValid,\n    setValues,\n    resetForm\n  } = useFormAndValidation();\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    props.onUpdateUser({\n      avatar: values.avaLink\n    });\n  }\n\n  React.useEffect(() => {\n    setValues({\n      avaLink: \"\"\n    });\n  }, [props.isOpen]);\n  return /*#__PURE__*/_jsxDEV(PopupWithForm // validButton={props.validity.isValid}\n  , {\n    loader: props.loader,\n    onSubmit: handleSubmit,\n    title: \"\\u041E\\u0431\\u043D\\u043E\\u0432\\u0438\\u0442\\u044C\\xA0\\u0430\\u0432\\u0430\\u0442\\u0430\\u0440\",\n    name: \"card-removal\",\n    isOpen: props.isOpen,\n    onCloseAll: props.onClose,\n    children: /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        value: values.avaLink || \"\",\n        onChange: handleChange,\n        type: \"url\",\n        className: \"popup__field popup__field_type_link\",\n        placeholder: \"\\u0421\\u0441\\u044B\\u043B\\u043A\\u0430 \\u043D\\u0430 \\u0430\\u0432\\u0430\\u0442\\u0430\\u0440\",\n        name: \"avaLink\",\n        id: \"ava-link\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"error\",\n        id: \"ava-link-error\",\n        children: errors.avaLink\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 9\n  }, this);\n}\n\n_s(EditAvatarPopup, \"5LKwwR5wsaJXHisguNHAi4ZxWJA=\", false, function () {\n  return [useFormAndValidation];\n});\n\n_c = EditAvatarPopup;\nexport default EditAvatarPopup; // import React from \"react\";\n// import PopupWithForm from \"./PopupWithForm\";\n// import { useFormAndValidation } from \"../hooks/Validation\";\n// function EditAvatarPopup(props) {\n//     const [inputData, setInputData] = React.useState({ current: \"\" });\n//     const handleChangee = (event) => {\n//         setInputData({ current: event.target.value });\n//         // props.handleValidity(event.target);\n//     };\n//     const { values, handleChange, errors, isValid, setValues, resetForm } =\n//         useFormAndValidation();\n//     function handleSubmit(e) {\n//         e.preventDefault();\n//         props.onUpdateUser({\n//             avatar: inputData.current.value,\n//         });\n//     }\n//     React.useEffect(() => {\n//         inputData.current.value = \"\";\n//     }, [props.isOpen]);\n//     return (\n//         <PopupWithForm\n//             // validButton={props.validity.isValid}\n//             loader={props.loader}\n//             onSubmit={handleSubmit}\n//             title=\"Обновить&nbsp;аватар\"\n//             name=\"card-removal\"\n//             isOpen={props.isOpen}\n//             onCloseAll={props.onClose}\n//             children={\n//                 <>\n//                     <input\n//                         value={inputData.current}\n//                         onChange={handleChangee}\n//                         ref={inputData}\n//                         type=\"url\"\n//                         className=\"popup__field popup__field_type_link\"\n//                         placeholder=\"Ссылка на аватар\"\n//                         name=\"avaLink\"\n//                         id=\"ava-link\"\n//                         required\n//                     />\n//                     <span className=\"error\" id=\"ava-link-error\">\n//                         {/* {props.validity.message.avaLink} */}\n//                     </span>\n//                 </>\n//             }\n//         />\n//     );\n// }\n// export default EditAvatarPopup;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditAvatarPopup\");","map":{"version":3,"sources":["C:/dev/frontend/react-mesto-auth/src/components/EditAvatarPopup.js"],"names":["React","PopupWithForm","useFormAndValidation","EditAvatarPopup","props","values","handleChange","errors","isValid","setValues","resetForm","handleSubmit","e","preventDefault","onUpdateUser","avatar","avaLink","useEffect","isOpen","loader","onClose"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,SAASC,oBAAT,QAAqC,qBAArC;;;;AAEA,SAASC,eAAT,CAAyBC,KAAzB,EAAgC;AAAA;;AAC5B,QAAM;AAAEC,IAAAA,MAAF;AAAUC,IAAAA,YAAV;AAAwBC,IAAAA,MAAxB;AAAgCC,IAAAA,OAAhC;AAAyCC,IAAAA,SAAzC;AAAoDC,IAAAA;AAApD,MACFR,oBAAoB,EADxB;;AAGA,WAASS,YAAT,CAAsBC,CAAtB,EAAyB;AACrBA,IAAAA,CAAC,CAACC,cAAF;AACAT,IAAAA,KAAK,CAACU,YAAN,CAAmB;AACfC,MAAAA,MAAM,EAAEV,MAAM,CAACW;AADA,KAAnB;AAGH;;AAEDhB,EAAAA,KAAK,CAACiB,SAAN,CAAgB,MAAM;AAClBR,IAAAA,SAAS,CAAC;AAAEO,MAAAA,OAAO,EAAE;AAAX,KAAD,CAAT;AACH,GAFD,EAEG,CAACZ,KAAK,CAACc,MAAP,CAFH;AAIA,sBACI,QAAC,aAAD,CACI;AADJ;AAEI,IAAA,MAAM,EAAEd,KAAK,CAACe,MAFlB;AAGI,IAAA,QAAQ,EAAER,YAHd;AAII,IAAA,KAAK,EAAC,0FAJV;AAKI,IAAA,IAAI,EAAC,cALT;AAMI,IAAA,MAAM,EAAEP,KAAK,CAACc,MANlB;AAOI,IAAA,UAAU,EAAEd,KAAK,CAACgB,OAPtB;AAQI,IAAA,QAAQ,eACJ;AAAA,8BACI;AACI,QAAA,KAAK,EAAEf,MAAM,CAACW,OAAP,IAAkB,EAD7B;AAEI,QAAA,QAAQ,EAAEV,YAFd;AAGI,QAAA,IAAI,EAAC,KAHT;AAII,QAAA,SAAS,EAAC,qCAJd;AAKI,QAAA,WAAW,EAAC,wFALhB;AAMI,QAAA,IAAI,EAAC,SANT;AAOI,QAAA,EAAE,EAAC,UAPP;AAQI,QAAA,QAAQ;AARZ;AAAA;AAAA;AAAA;AAAA,cADJ,eAWI;AAAM,QAAA,SAAS,EAAC,OAAhB;AAAwB,QAAA,EAAE,EAAC,gBAA3B;AAAA,kBACKC,MAAM,CAACS;AADZ;AAAA;AAAA;AAAA;AAAA,cAXJ;AAAA;AATR;AAAA;AAAA;AAAA;AAAA,UADJ;AA4BH;;GA3CQb,e;UAEDD,oB;;;KAFCC,e;AA6CT,eAAeA,eAAf,C,CAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA","sourcesContent":["import React from \"react\";\r\nimport PopupWithForm from \"./PopupWithForm\";\r\nimport { useFormAndValidation } from \"../hooks/Validation\";\r\n\r\nfunction EditAvatarPopup(props) {\r\n    const { values, handleChange, errors, isValid, setValues, resetForm } =\r\n        useFormAndValidation();\r\n\r\n    function handleSubmit(e) {\r\n        e.preventDefault();\r\n        props.onUpdateUser({\r\n            avatar: values.avaLink,\r\n        });\r\n    }\r\n\r\n    React.useEffect(() => {\r\n        setValues({ avaLink: \"\" });\r\n    }, [props.isOpen]);\r\n\r\n    return (\r\n        <PopupWithForm\r\n            // validButton={props.validity.isValid}\r\n            loader={props.loader}\r\n            onSubmit={handleSubmit}\r\n            title=\"Обновить&nbsp;аватар\"\r\n            name=\"card-removal\"\r\n            isOpen={props.isOpen}\r\n            onCloseAll={props.onClose}\r\n            children={\r\n                <>\r\n                    <input\r\n                        value={values.avaLink || \"\"}\r\n                        onChange={handleChange}\r\n                        type=\"url\"\r\n                        className=\"popup__field popup__field_type_link\"\r\n                        placeholder=\"Ссылка на аватар\"\r\n                        name=\"avaLink\"\r\n                        id=\"ava-link\"\r\n                        required\r\n                    />\r\n                    <span className=\"error\" id=\"ava-link-error\">\r\n                        {errors.avaLink}\r\n                    </span>\r\n                </>\r\n            }\r\n        />\r\n    );\r\n}\r\n\r\nexport default EditAvatarPopup;\r\n\r\n// import React from \"react\";\r\n// import PopupWithForm from \"./PopupWithForm\";\r\n// import { useFormAndValidation } from \"../hooks/Validation\";\r\n\r\n// function EditAvatarPopup(props) {\r\n//     const [inputData, setInputData] = React.useState({ current: \"\" });\r\n\r\n//     const handleChangee = (event) => {\r\n//         setInputData({ current: event.target.value });\r\n//         // props.handleValidity(event.target);\r\n//     };\r\n//     const { values, handleChange, errors, isValid, setValues, resetForm } =\r\n//         useFormAndValidation();\r\n\r\n//     function handleSubmit(e) {\r\n//         e.preventDefault();\r\n//         props.onUpdateUser({\r\n//             avatar: inputData.current.value,\r\n//         });\r\n//     }\r\n\r\n//     React.useEffect(() => {\r\n//         inputData.current.value = \"\";\r\n//     }, [props.isOpen]);\r\n\r\n//     return (\r\n//         <PopupWithForm\r\n//             // validButton={props.validity.isValid}\r\n//             loader={props.loader}\r\n//             onSubmit={handleSubmit}\r\n//             title=\"Обновить&nbsp;аватар\"\r\n//             name=\"card-removal\"\r\n//             isOpen={props.isOpen}\r\n//             onCloseAll={props.onClose}\r\n//             children={\r\n//                 <>\r\n//                     <input\r\n//                         value={inputData.current}\r\n//                         onChange={handleChangee}\r\n//                         ref={inputData}\r\n//                         type=\"url\"\r\n//                         className=\"popup__field popup__field_type_link\"\r\n//                         placeholder=\"Ссылка на аватар\"\r\n//                         name=\"avaLink\"\r\n//                         id=\"ava-link\"\r\n//                         required\r\n//                     />\r\n//                     <span className=\"error\" id=\"ava-link-error\">\r\n//                         {/* {props.validity.message.avaLink} */}\r\n//                     </span>\r\n//                 </>\r\n//             }\r\n//         />\r\n//     );\r\n// }\r\n\r\n// export default EditAvatarPopup;\r\n"]},"metadata":{},"sourceType":"module"}