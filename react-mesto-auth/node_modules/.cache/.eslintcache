[{"C:\\dev\\frontend\\react-mesto-auth\\src\\index.js":"1","C:\\dev\\frontend\\react-mesto-auth\\src\\reportWebVitals.js":"2","C:\\dev\\frontend\\react-mesto-auth\\src\\components\\App.js":"3","C:\\dev\\frontend\\react-mesto-auth\\src\\components\\Main.js":"4","C:\\dev\\frontend\\react-mesto-auth\\src\\components\\PopupWithForm.js":"5","C:\\dev\\frontend\\react-mesto-auth\\src\\components\\Footer.js":"6","C:\\dev\\frontend\\react-mesto-auth\\src\\components\\ImagePopup.js":"7","C:\\dev\\frontend\\react-mesto-auth\\src\\components\\Header.js":"8","C:\\dev\\frontend\\react-mesto-auth\\src\\components\\EditAvatarPopup.js":"9","C:\\dev\\frontend\\react-mesto-auth\\src\\components\\EditProfilePopup.js":"10","C:\\dev\\frontend\\react-mesto-auth\\src\\components\\ProtectedRoute.js":"11","C:\\dev\\frontend\\react-mesto-auth\\src\\components\\Login.js":"12","C:\\dev\\frontend\\react-mesto-auth\\src\\components\\Register.js":"13","C:\\dev\\frontend\\react-mesto-auth\\src\\components\\AddPlacePopup .js":"14","C:\\dev\\frontend\\react-mesto-auth\\src\\utils\\Api.js":"15","C:\\dev\\frontend\\react-mesto-auth\\src\\utils\\Auth.js":"16","C:\\dev\\frontend\\react-mesto-auth\\src\\contexts\\CurrentUserContext.js":"17","C:\\dev\\frontend\\react-mesto-auth\\src\\components\\Nav\\NavButton.js":"18","C:\\dev\\frontend\\react-mesto-auth\\src\\components\\InfoToolTip\\InfoTooltip.js":"19","C:\\dev\\frontend\\react-mesto-auth\\src\\components\\Card.js":"20","C:\\dev\\frontend\\react-mesto-auth\\src\\components\\AuthRegForm\\AuthRegForm.js":"21","C:\\dev\\frontend\\react-mesto-auth\\src\\hooks\\Validation.js":"22"},{"size":654,"mtime":1643304906798,"results":"23","hashOfConfig":"24"},{"size":375,"mtime":1643304906800,"results":"25","hashOfConfig":"24"},{"size":11103,"mtime":1643991635334,"results":"26","hashOfConfig":"24"},{"size":2080,"mtime":1643817414460,"results":"27","hashOfConfig":"24"},{"size":2410,"mtime":1643304906734,"results":"28","hashOfConfig":"24"},{"size":212,"mtime":1643304906723,"results":"29","hashOfConfig":"24"},{"size":1206,"mtime":1643304906725,"results":"30","hashOfConfig":"24"},{"size":428,"mtime":1643304906724,"results":"31","hashOfConfig":"24"},{"size":3341,"mtime":1643991719709,"results":"32","hashOfConfig":"24"},{"size":5760,"mtime":1643304906722,"results":"33","hashOfConfig":"24"},{"size":290,"mtime":1643304906735,"results":"34","hashOfConfig":"24"},{"size":2304,"mtime":1643304906729,"results":"35","hashOfConfig":"24"},{"size":2496,"mtime":1643304906735,"results":"36","hashOfConfig":"24"},{"size":4612,"mtime":1643304906716,"results":"37","hashOfConfig":"24"},{"size":4868,"mtime":1644081884617,"results":"38","hashOfConfig":"24"},{"size":2030,"mtime":1644081888131,"results":"39","hashOfConfig":"24"},{"size":142,"mtime":1643304906736,"results":"40","hashOfConfig":"24"},{"size":868,"mtime":1643304906733,"results":"41","hashOfConfig":"24"},{"size":1430,"mtime":1643304906728,"results":"42","hashOfConfig":"24"},{"size":1841,"mtime":1643819121933,"results":"43","hashOfConfig":"24"},{"size":1041,"mtime":1643304906719,"results":"44","hashOfConfig":"24"},{"size":1674,"mtime":1643304906756,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48"},"f4tzf2",{"filePath":"49","messages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53"},{"filePath":"54","messages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56"},{"filePath":"57","messages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59"},{"filePath":"60","messages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68"},{"filePath":"69","messages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71"},{"filePath":"72","messages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74"},{"filePath":"75","messages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77"},{"filePath":"78","messages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80"},{"filePath":"81","messages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83"},{"filePath":"84","messages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"86","messages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90"},{"filePath":"91","messages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93"},{"filePath":"94","messages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96"},{"filePath":"97","messages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99"},{"filePath":"100","messages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102"},{"filePath":"103","messages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\dev\\frontend\\react-mesto-auth\\src\\index.js",["105"],"import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./components/App\";\r\nimport { BrowserRouter, Outlet } from \"react-router-dom\";\r\n\r\nimport reportWebVitals from \"./reportWebVitals\";\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <BrowserRouter>\r\n            <App />\r\n        </BrowserRouter>\r\n    </React.StrictMode>,\r\n    document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n","C:\\dev\\frontend\\react-mesto-auth\\src\\reportWebVitals.js",[],"C:\\dev\\frontend\\react-mesto-auth\\src\\components\\App.js",["106","107","108","109"],"import React from \"react\";\r\nimport {\r\n  BrowserRouter,\r\n  Routes,\r\n  Route,\r\n  Link,\r\n  useNavigate,\r\n} from \"react-router-dom\";\r\n\r\nimport Main from \"./Main\";\r\nimport Footer from \"./Footer\";\r\nimport PopupWithForm from \"./PopupWithForm\";\r\nimport ImagePopup from \"./ImagePopup\";\r\nimport Header from \"./Header\";\r\nimport Api from \"../utils/Api\";\r\nimport EditProfilePopup from \"./EditProfilePopup\";\r\nimport EditAvatarPopup from \"./EditAvatarPopup\";\r\nimport AddPlacePopup from \"./AddPlacePopup \";\r\nimport Register from \"./Register\";\r\nimport LogIn from \"./Login\";\r\nimport InfoTooltip from \"./InfoToolTip/InfoTooltip\";\r\nimport ProtectedRoute from \"./ProtectedRoute\";\r\nimport NavButton from \"./Nav/NavButton\";\r\nimport sendAuth from \"../utils/Auth\";\r\n\r\nimport { CurrentUserContext } from \"../contexts/CurrentUserContext\";\r\nimport react from \"react\";\r\n\r\nfunction App() {\r\n  const history = useNavigate();\r\n  const [loggedIn, setLoggedIn] = React.useState(false);\r\n  //ПОПАПЫ---------------------------------------------------------\r\n  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] =\r\n    React.useState(false);\r\n  const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = React.useState(false);\r\n  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] =\r\n    React.useState(false);\r\n  const [isImageAvatarPopupOpen, setIsImageAvatarPopupOpen] =\r\n    React.useState(false);\r\n\r\n  const [isAuthPopupOpen, setIsAuthPopupOpen] = React.useState(false);\r\n  const [isRegSucces, setIsRegSucces] = React.useState(\"\");\r\n  //ПОПАПЫ_________________________________________________________\r\n\r\n  //ЮЗЕР И КАРТОЧКИ_---------------------------------------------------\r\n  const [selectedCard, setSelectedCard] = React.useState({});\r\n\r\n  const [currentUser, setCurrentUser] = React.useState({});\r\n\r\n  const [cards, setCards] = React.useState([]);\r\n\r\n  const [mail, setMail] = React.useState(\"\");\r\n  //ЮЗЕР И КАРТОЧКИ___________________________________________________\r\n\r\n  //ИКОНКА ЗАГРУЗКИ---------------------------------------------------\r\n  const [loaderEdit, setLoaderEdit] = React.useState(false);\r\n  const [loaderAdd, setLoaderAdd] = React.useState(false);\r\n  const [loaderAva, setLoaderAva] = React.useState(false);\r\n  //ИКОНКА ЗАГРУЗКИ___________________________________________________\r\n  React.useEffect(() => {\r\n    console.log(localStorage.getItem(\"token\"));\r\n    handleTokenCheck();\r\n  }, [loggedIn]);\r\n\r\n  // React.useEffect(() => {\r\n  //   Api.getUserData()\r\n  //     .then((data) => {\r\n  //       setCurrentUser(data);\r\n  //     })\r\n  //     .catch((err) => {\r\n  //       console.log(err);\r\n  //     });\r\n  // }, [loggedIn]);\r\n\r\n  function handleEditAvatarClick() {\r\n    setIsEditAvatarPopupOpen(true);\r\n  }\r\n\r\n  function handleEditProfileClick() {\r\n    setIsEditProfilePopupOpen(true);\r\n  }\r\n\r\n  function handleAddPlaceClick() {\r\n    setIsAddPlacePopupOpen(true);\r\n  }\r\n\r\n  function handleImageAvatarPopupClick() {\r\n    setIsImageAvatarPopupOpen(true);\r\n  }\r\n\r\n  function handleCardClick(cardData) {\r\n    setSelectedCard(cardData);\r\n  }\r\n\r\n  function closeAllPopups() {\r\n    setIsEditProfilePopupOpen(false);\r\n    setIsEditAvatarPopupOpen(false);\r\n    setIsAddPlacePopupOpen(false);\r\n    setIsImageAvatarPopupOpen(false);\r\n    setIsAuthPopupOpen(false);\r\n    setSelectedCard({});\r\n  }\r\n\r\n  React.useEffect(() => {\r\n    function handleEsc(event) {\r\n      if (event.key === `Escape`) {\r\n        closeAllPopups();\r\n      }\r\n    }\r\n    document.addEventListener(\"keydown\", handleEsc);\r\n\r\n    return () => {\r\n      document.removeEventListener(\"keydown\", handleEsc);\r\n    };\r\n  }, []);\r\n\r\n  function handleUpdateUser(data) {\r\n    setLoaderEdit(true);\r\n    Api.sendUserData(data)\r\n      .then((data) => {\r\n        setCurrentUser(data);\r\n      })\r\n      .then(() => {\r\n        closeAllPopups();\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      })\r\n      .finally(() => {\r\n        setLoaderEdit(false);\r\n      });\r\n  }\r\n\r\n  function handleUpdatAvatar(data) {\r\n    setLoaderAva(true);\r\n    Api.changeAvatarRequest(data.avatar)\r\n      .then((data) => {\r\n        setCurrentUser({ ...currentUser, avatar: data.avatar });\r\n      })\r\n      .then(() => {\r\n        closeAllPopups();\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      })\r\n      .finally(() => {\r\n        setLoaderAva(false);\r\n      });\r\n  }\r\n\r\n  function handleAddPlaceSubmit(data) {\r\n    setLoaderAdd(true);\r\n    Api.sendUserCard(data)\r\n      .then((data) => {\r\n        setCards([data, ...cards]);\r\n      })\r\n      .then(() => {\r\n        closeAllPopups();\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      })\r\n      .finally(() => {\r\n        setLoaderAdd(false);\r\n      });\r\n  }\r\n\r\n  //CARDS\r\n\r\n  React.useEffect(() => {\r\n    Api.getCards()\r\n      .then((items) => {\r\n        setCards(items);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  }, []);\r\n\r\n  function handleCardLike(card) {\r\n    //Снова проверяем, есть ли уже лайк на этой карточке\r\n    console.log(currentUser._id);\r\n    const isLiked = card.likes.some((i) => {\r\n      console.log(i);\r\n      return i === currentUser._id;\r\n    });\r\n    console.log(card);\r\n    // Отправляем запрос в API и получаем обновлённые данные карточки\r\n    Api.changeLikeCardStatus(card._id, !isLiked)\r\n      .then((newCard) => {\r\n        setCards((cards) =>\r\n          cards.map((c) => (c._id === card._id ? newCard : c))\r\n        );\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  }\r\n\r\n  function handleDeleteClick(card) {\r\n    Api.deleteCardRequest(card._id)\r\n      .then((newCard) => {\r\n        setCards((cards) => cards.filter((c) => c !== card));\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  }\r\n\r\n  function handleRegistrationSubmit(data) {\r\n    sendAuth\r\n      .registration(data)\r\n      .then((regData) => {\r\n        history(\"/sign-in\");\r\n        setIsAuthPopupOpen(true);\r\n        setIsRegSucces(true);\r\n        console.log(regData);\r\n        // if (regData.data._id) {\r\n        //     setIsRegSucces(true);\r\n        // }\r\n      })\r\n      .catch((err) => {\r\n        setIsAuthPopupOpen(true);\r\n        setIsRegSucces(false);\r\n\r\n        console.log(err);\r\n      });\r\n  }\r\n  function handleLogInSubmit(data) {\r\n    sendAuth\r\n      .authorization(data)\r\n      .then((logInData) => {\r\n        localStorage.setItem(\"token\", logInData.token);\r\n        setLoggedIn(true);\r\n        setCurrentUser(data);\r\n\r\n        history(\"/\");\r\n\r\n        return logInData;\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  }\r\n\r\n  function handleTokenCheck() {\r\n    const myToken = localStorage.getItem(\"token\");\r\n    console.log(myToken);\r\n    if (myToken) {\r\n      sendAuth\r\n        .checkToken(myToken)\r\n        .then((logInData) => {\r\n          setCurrentUser(logInData);\r\n          setMail(logInData.email);\r\n          console.log(logInData);\r\n          if (logInData) {\r\n            setLoggedIn(true);\r\n            console.log(\"done\");\r\n            history(\"/\");\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          console.log(\"my\", err);\r\n        });\r\n    }\r\n  }\r\n\r\n  function handleExitAccount() {\r\n    setMail(\"\");\r\n    localStorage.removeItem(\"token\");\r\n    setCurrentUser({});\r\n    setLoggedIn(false);\r\n  }\r\n\r\n  return (\r\n    <CurrentUserContext.Provider value={currentUser}>\r\n      <div className=\"App\">\r\n        <InfoTooltip\r\n          success={isRegSucces}\r\n          onClose={closeAllPopups}\r\n          isOpened={isAuthPopupOpen}\r\n        />\r\n\r\n        <Routes>\r\n          <Route\r\n            path=\"/sign-in\"\r\n            element={\r\n              <>\r\n                <Header\r\n                  children={\r\n                    <>\r\n                      <NavButton\r\n                        email={false}\r\n                        buttonText=\"Регистрация\"\r\n                        redirect=\"/sign-up\"\r\n                      />\r\n                    </>\r\n                  }\r\n                />\r\n                <LogIn onSubmit={handleLogInSubmit} />\r\n              </>\r\n            }\r\n          />\r\n          <Route\r\n            path=\"/sign-up\"\r\n            element={\r\n              <>\r\n                <Header\r\n                  children={\r\n                    <>\r\n                      <NavButton\r\n                        email={false}\r\n                        buttonText=\"Войти\"\r\n                        redirect=\"/sign-in\"\r\n                      />\r\n                    </>\r\n                  }\r\n                />\r\n                <Register onSubmit={handleRegistrationSubmit} />\r\n              </>\r\n            }\r\n          />\r\n\r\n          <Route\r\n            exact\r\n            path=\"/\"\r\n            element={\r\n              <ProtectedRoute redirectTo=\"/sign-in\" loggedIn={loggedIn}>\r\n                <Header\r\n                  children={\r\n                    <>\r\n                      <NavButton\r\n                        loggedIn={loggedIn}\r\n                        onClick={handleExitAccount}\r\n                        email={<h3 className=\"nav__email\">{mail}</h3>}\r\n                        buttonText=\"Выход\"\r\n                        redirect=\"/sign-in\"\r\n                      />\r\n                    </>\r\n                  }\r\n                />\r\n                <Main\r\n                  currentUser={currentUser}\r\n                  onEditProfile={handleEditProfileClick}\r\n                  onAddPlace={handleAddPlaceClick}\r\n                  onEditAvatar={handleEditAvatarClick}\r\n                  onImagePopup={handleImageAvatarPopupClick}\r\n                  onImage={handleCardClick}\r\n                  cards={cards}\r\n                  onCardLike={handleCardLike}\r\n                  onCardDelete={handleDeleteClick}\r\n                />\r\n                <EditProfilePopup\r\n                  loader={loaderEdit}\r\n                  onUpdateUser={handleUpdateUser}\r\n                  isOpen={isEditProfilePopupOpen}\r\n                  onClose={closeAllPopups}\r\n                />\r\n                <EditAvatarPopup\r\n                  loader={loaderAva}\r\n                  onUpdateUser={handleUpdatAvatar}\r\n                  isOpen={isEditAvatarPopupOpen}\r\n                  onClose={closeAllPopups}\r\n                />\r\n                <AddPlacePopup\r\n                  loader={loaderAdd}\r\n                  onAddCard={handleAddPlaceSubmit}\r\n                  isOpen={isAddPlacePopupOpen}\r\n                  onClose={closeAllPopups}\r\n                />\r\n                <PopupWithForm title=\"Вы уверены?\" name=\"reset-avatar\" />\r\n                <ImagePopup\r\n                  isOpen={isImageAvatarPopupOpen}\r\n                  name=\"press-image\"\r\n                  card={selectedCard}\r\n                  onClose={closeAllPopups}\r\n                />\r\n                <Footer />{\" \"}\r\n              </ProtectedRoute>\r\n            }\r\n          />\r\n        </Routes>\r\n      </div>\r\n    </CurrentUserContext.Provider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","C:\\dev\\frontend\\react-mesto-auth\\src\\components\\Main.js",["110","111","112","113"],"import React, { useEffect } from \"react\";\r\nimport changeIcon from \"../images/Vector.png\";\r\nimport avatar from \"../images/Avatar.png\";\r\nimport Api from \"../utils/Api\";\r\nimport Card from \"./Card\";\r\n\r\nimport { CurrentUserContext } from \"../contexts/CurrentUserContext\";\r\nimport react from \"react\";\r\n\r\nfunction Main(props) {\r\n  const currentUser = React.useContext(CurrentUserContext);\r\n  console.log(currentUser);\r\n  return (\r\n    <main className=\"content\">\r\n      <section className=\"profile\">\r\n        <div className=\"profile__info-wrapper\">\r\n          <div className=\"profile__illustration-wrapper\">\r\n            <div className=\"profile__illustration-overlay\"></div>\r\n            <img\r\n              className=\"profile__illustration-redact\"\r\n              alt=\"Изменить аватар\"\r\n              src={changeIcon}\r\n              onClick={props.onEditAvatar}\r\n            />\r\n          </div>\r\n          <img\r\n            className=\"profile__illustration\"\r\n            alt=\"Аватар пользователя\"\r\n            src={currentUser.avatar}\r\n          />\r\n          <div className=\"profile__info\">\r\n            <h1 className=\"profile__title\">{currentUser.name}</h1>\r\n            <button\r\n              type=\"button\"\r\n              className=\"profile__edit-button\"\r\n              onClick={props.onEditProfile}\r\n            ></button>\r\n            <p className=\"profile__subtitle\">{currentUser.about}</p>\r\n          </div>\r\n        </div>\r\n        <button\r\n          className=\"profile__add-button\"\r\n          type=\"button\"\r\n          onClick={props.onAddPlace}\r\n        ></button>\r\n      </section>\r\n\r\n      <section className=\"elements\">\r\n        {props.cards.map((el, ind) => {\r\n          return (\r\n            <Card\r\n              onImagePopup={props.onImagePopup}\r\n              onCardDelete={props.onCardDelete}\r\n              onCardLike={props.onCardLike}\r\n              card={el}\r\n              onImage={props.onImage}\r\n              key={el._id}\r\n            />\r\n          );\r\n        })}\r\n      </section>\r\n    </main>\r\n  );\r\n}\r\n\r\nexport default Main;\r\n","C:\\dev\\frontend\\react-mesto-auth\\src\\components\\PopupWithForm.js",["114"],"import React from \"react\";\r\n\r\nclass PopupWithForm extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    handleOverlay = (e) => {\r\n        if (e.target === e.currentTarget) {\r\n            this.props.onCloseAll();\r\n        }\r\n        // const popups = Array.from(document.querySelectorAll(\".popup\"));\r\n        // e.stopPropagation();\r\n        // popups.forEach((el) => {\r\n        //     e.target === el && this.props.onCloseAll();\r\n        // });\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <article\r\n                onMouseUp={this.handleOverlay}\r\n                className={`popup popup_${this.props.name} ${\r\n                    this.props.isOpen && \"popup_opened\"\r\n                }`}\r\n            >\r\n                <div className=\"popup__container\">\r\n                    <h2 className=\"popup__title\">{this.props.title}</h2>\r\n                    <form\r\n                        onSubmit={this.props.onSubmit}\r\n                        className={`form form_${this.props.name}`}\r\n                        name={`${this.props.name}`}\r\n                        id={`form_${this.props.name}ID`}\r\n                    >\r\n                        {this.props.children}\r\n                        <button\r\n                            type=\"submit\"\r\n                            className={`popup__submit \r\n                            ${!this.props.validButton && \"ssubmit-invalid\"}`}\r\n                        >\r\n                            Сохранить\r\n                        </button>\r\n                    </form>\r\n                    <button\r\n                        className={`popup__close popup_${this.props.name}`}\r\n                        type=\"button\"\r\n                        onClick={this.props.onCloseAll}\r\n                    ></button>\r\n\r\n                    {this.props.loader && (\r\n                        <div className=\"circ\">\r\n                            <div className=\"circ_load\">Loading . . . </div>\r\n                            <div className=\"circ_hands\"></div>\r\n                            <div className=\"circ_body\"></div>\r\n                            <div className=\"circ_head\">\r\n                                <div className=\"circ_eye\"></div>\r\n                            </div>\r\n                        </div>\r\n                    )}\r\n                </div>\r\n            </article>\r\n        );\r\n    }\r\n}\r\n\r\nexport default PopupWithForm;\r\n","C:\\dev\\frontend\\react-mesto-auth\\src\\components\\Footer.js",[],"C:\\dev\\frontend\\react-mesto-auth\\src\\components\\ImagePopup.js",[],"C:\\dev\\frontend\\react-mesto-auth\\src\\components\\Header.js",[],"C:\\dev\\frontend\\react-mesto-auth\\src\\components\\EditAvatarPopup.js",["115","116","117"],"import React from \"react\";\r\nimport PopupWithForm from \"./PopupWithForm\";\r\nimport { useFormAndValidation } from \"../hooks/Validation\";\r\n\r\nfunction EditAvatarPopup(props) {\r\n  const { values, handleChange, errors, isValid, setValues, resetForm } =\r\n    useFormAndValidation();\r\n\r\n  function handleSubmit(e) {\r\n    e.preventDefault();\r\n    props.onUpdateUser({\r\n      avatar: values.avaLink,\r\n    });\r\n  }\r\n\r\n  React.useEffect(() => {\r\n    setValues({ avaLink: \"\" });\r\n  }, [props.isOpen]);\r\n\r\n  return (\r\n    <PopupWithForm\r\n      // validButton={props.validity.isValid}\r\n      loader={props.loader}\r\n      onSubmit={handleSubmit}\r\n      title=\"Обновить&nbsp;аватар\"\r\n      name=\"card-removal\"\r\n      isOpen={props.isOpen}\r\n      onCloseAll={props.onClose}\r\n      children={\r\n        <>\r\n          <input\r\n            value={values.avaLink || \"\"}\r\n            onChange={handleChange}\r\n            type=\"url\"\r\n            className=\"popup__field popup__field_type_link\"\r\n            placeholder=\"Ссылка на аватар\"\r\n            name=\"avaLink\"\r\n            id=\"ava-link\"\r\n            required\r\n          />\r\n          <span className=\"error\" id=\"ava-link-error\">\r\n            {errors.avaLink}\r\n          </span>\r\n        </>\r\n      }\r\n    />\r\n  );\r\n}\r\n\r\nexport default EditAvatarPopup;\r\n\r\n// import React from \"react\";\r\n// import PopupWithForm from \"./PopupWithForm\";\r\n// import { useFormAndValidation } from \"../hooks/Validation\";\r\n\r\n// function EditAvatarPopup(props) {\r\n//     const [inputData, setInputData] = React.useState({ current: \"\" });\r\n\r\n//     const handleChangee = (event) => {\r\n//         setInputData({ current: event.target.value });\r\n//         // props.handleValidity(event.target);\r\n//     };\r\n//     const { values, handleChange, errors, isValid, setValues, resetForm } =\r\n//         useFormAndValidation();\r\n\r\n//     function handleSubmit(e) {\r\n//         e.preventDefault();\r\n//         props.onUpdateUser({\r\n//             avatar: inputData.current.value,\r\n//         });\r\n//     }\r\n\r\n//     React.useEffect(() => {\r\n//         inputData.current.value = \"\";\r\n//     }, [props.isOpen]);\r\n\r\n//     return (\r\n//         <PopupWithForm\r\n//             // validButton={props.validity.isValid}\r\n//             loader={props.loader}\r\n//             onSubmit={handleSubmit}\r\n//             title=\"Обновить&nbsp;аватар\"\r\n//             name=\"card-removal\"\r\n//             isOpen={props.isOpen}\r\n//             onCloseAll={props.onClose}\r\n//             children={\r\n//                 <>\r\n//                     <input\r\n//                         value={inputData.current}\r\n//                         onChange={handleChangee}\r\n//                         ref={inputData}\r\n//                         type=\"url\"\r\n//                         className=\"popup__field popup__field_type_link\"\r\n//                         placeholder=\"Ссылка на аватар\"\r\n//                         name=\"avaLink\"\r\n//                         id=\"ava-link\"\r\n//                         required\r\n//                     />\r\n//                     <span className=\"error\" id=\"ava-link-error\">\r\n//                         {/* {props.validity.message.avaLink} */}\r\n//                     </span>\r\n//                 </>\r\n//             }\r\n//         />\r\n//     );\r\n// }\r\n\r\n// export default EditAvatarPopup;\r\n","C:\\dev\\frontend\\react-mesto-auth\\src\\components\\EditProfilePopup.js",["118","119","120"],"import React from \"react\";\r\nimport PopupWithForm from \"./PopupWithForm\";\r\nimport {\r\n    CurrentUserContext,\r\n    currentUser,\r\n} from \"../contexts/CurrentUserContext\";\r\nimport { useFormAndValidation } from \"../hooks/Validation\";\r\n\r\nfunction EditProfilePopup(props) {\r\n    const currentUser = React.useContext(CurrentUserContext);\r\n\r\n    const { values, handleChange, errors, isValid, setValues, resetForm } =\r\n        useFormAndValidation();\r\n\r\n    React.useEffect(() => {\r\n        setValues({\r\n            ...values,\r\n            editName: currentUser.name,\r\n            editDescription: currentUser.about,\r\n        });\r\n    }, [currentUser, props.isOpen]);\r\n\r\n    function handleSubmit(e) {\r\n        e.preventDefault();\r\n        props.onUpdateUser({\r\n            name: values.editName,\r\n            about: values.editDescription,\r\n        });\r\n    }\r\n\r\n    return (\r\n        <PopupWithForm\r\n            validButton={isValid}\r\n            loader={props.loader}\r\n            onSubmit={handleSubmit}\r\n            title=\"Редактировать&nbsp;профиль\"\r\n            name=\"edit\"\r\n            isOpen={props.isOpen}\r\n            onCloseAll={props.onClose}\r\n            children={\r\n                <>\r\n                    <input\r\n                        type=\"text\"\r\n                        value={values.editName || \"\"}\r\n                        onChange={handleChange}\r\n                        className=\"popup__field popup__field_type_name\"\r\n                        placeholder=\"Жак-Ив-Кусто\"\r\n                        name=\"editName\"\r\n                        id=\"name\"\r\n                        required\r\n                        minLength=\"2\"\r\n                        maxLength=\"40\"\r\n                    />\r\n                    <span className=\"error\" id=\"name-error\">\r\n                        {errors.editName}\r\n                    </span>\r\n                    <input\r\n                        type=\"text\"\r\n                        value={values.editDescription || \"\"}\r\n                        onChange={handleChange}\r\n                        className=\"popup__field popup__field_type_job\"\r\n                        name=\"editDescription\"\r\n                        placeholder=\"Исследователь океана\"\r\n                        id=\"profession\"\r\n                        required\r\n                        minLength=\"2\"\r\n                        maxLength=\"200\"\r\n                    />\r\n                    <span className=\"error\" id=\"profession-error\">\r\n                        {errors.editDescription}\r\n                    </span>\r\n                </>\r\n            }\r\n        />\r\n    );\r\n}\r\n\r\nexport default EditProfilePopup;\r\n\r\n// import React from \"react\";\r\n// import PopupWithForm from \"./PopupWithForm\";\r\n// import {\r\n//     CurrentUserContext,\r\n//     currentUser,\r\n// } from \"../contexts/CurrentUserContext\";\r\n\r\n// function EditProfilePopup(props) {\r\n//     const currentUser = React.useContext(CurrentUserContext);\r\n\r\n//     const [inputName, setName] = React.useState({\r\n//         editName: \"\",\r\n//         editDescription: \"\",\r\n//     });\r\n\r\n//     React.useEffect(() => {\r\n//         setName({\r\n//             ...inputName,\r\n//             editName: currentUser.name,\r\n//             editDescription: currentUser.about,\r\n//         });\r\n//     }, [currentUser, props.isOpen]);\r\n\r\n//     const handleChange = (event) => {\r\n//         setName({ ...inputName, [event.target.name]: event.target.value });\r\n//         props.handleValidity(event.target);\r\n//         console.log(inputName);\r\n//     };\r\n\r\n//     function handleSubmit(e) {\r\n//         e.preventDefault();\r\n//         props.onUpdateUser({\r\n//             name: inputName.editName,\r\n//             about: inputName.editDescription,\r\n//         });\r\n//     }\r\n\r\n//     return (\r\n//         <PopupWithForm\r\n//             validButton={props.validity.isValid}\r\n//             loader={props.loader}\r\n//             onSubmit={handleSubmit}\r\n//             title=\"Редактировать&nbsp;профиль\"\r\n//             name=\"edit\"\r\n//             isOpen={props.isOpen}\r\n//             onCloseAll={props.onClose}\r\n//             children={\r\n//                 <>\r\n//                     <input\r\n//                         type=\"text\"\r\n//                         value={inputName.editName || \"\"}\r\n//                         onChange={handleChange}\r\n//                         className=\"popup__field popup__field_type_name\"\r\n//                         placeholder=\"Жак-Ив-Кусто\"\r\n//                         name=\"editName\"\r\n//                         id=\"name\"\r\n//                         required\r\n//                         minLength=\"2\"\r\n//                         maxLength=\"40\"\r\n//                     />\r\n//                     <span className=\"error\" id=\"name-error\">\r\n//                         {props.validity.message.editName}\r\n//                     </span>\r\n//                     <input\r\n//                         type=\"text\"\r\n//                         value={inputName.editDescription || \"\"}\r\n//                         onChange={handleChange}\r\n//                         className=\"popup__field popup__field_type_job\"\r\n//                         name=\"editDescription\"\r\n//                         placeholder=\"Исследователь океана\"\r\n//                         id=\"profession\"\r\n//                         required\r\n//                         minLength=\"2\"\r\n//                         maxLength=\"200\"\r\n//                     />\r\n//                     <span className=\"error\" id=\"profession-error\">\r\n//                         {props.validity.message.editDescription}\r\n//                     </span>\r\n//                 </>\r\n//             }\r\n//         />\r\n//     );\r\n// }\r\n\r\n// export default EditProfilePopup;\r\n","C:\\dev\\frontend\\react-mesto-auth\\src\\components\\ProtectedRoute.js",["121","122","123"],"import React from \"react\";\r\nimport reactDom from \"react-dom\";\r\nimport { Routes, Route, Navigate } from \"react-router-dom\";\r\n\r\nfunction ProtectedRoute({ children, redirectTo, loggedIn }) {\r\n    return loggedIn ? children : <Navigate to={redirectTo} />;\r\n}\r\n\r\nexport default ProtectedRoute;\r\n","C:\\dev\\frontend\\react-mesto-auth\\src\\components\\Login.js",["124"],"import React from \"react\";\r\nimport reactDom from \"react-dom\";\r\nimport AuthRegForm from \"./AuthRegForm/AuthRegForm\";\r\nimport \"./AuthRegForm/AuthRegForm.css\";\r\n\r\nfunction LogIn(props) {\r\n    const [inputValues, setInputValues] = React.useState({\r\n        logInEmail: \"\",\r\n        logInPassword: \"\",\r\n    });\r\n\r\n    const handleChange = (event) => {\r\n        setInputValues({\r\n            ...inputValues,\r\n            [event.target.name]: event.target.value,\r\n        });\r\n        // props.handleValidity(event.target);\r\n    };\r\n\r\n    function handleSubmit(e) {\r\n        e.preventDefault();\r\n        props.onSubmit(inputValues);\r\n    }\r\n\r\n    return (\r\n        <AuthRegForm\r\n            onSubmit={handleSubmit}\r\n            formText=\"Вход\"\r\n            buttonText=\"Войти\"\r\n            name=\"logIn\"\r\n            regLink=\"\"\r\n            children={\r\n                <>\r\n                    <input\r\n                        type=\"email\"\r\n                        onChange={handleChange}\r\n                        value={inputValues.logInEmail || \"\"}\r\n                        className=\"authRegForm__field\"\r\n                        placeholder=\"Email\"\r\n                        name=\"logInEmail\"\r\n                        id=\"logInEmail\"\r\n                        required\r\n                        minLength=\"2\"\r\n                        maxLength=\"40\"\r\n                    />\r\n                    <span className=\"error\" id=\"name-error\">\r\n                        {/* {props.validity.message.editName} */}\r\n                    </span>\r\n                    <input\r\n                        value={inputValues.logInPassword || \"\"}\r\n                        type=\"password\"\r\n                        onChange={handleChange}\r\n                        className=\"authRegForm__field\"\r\n                        name=\"logInPassword\"\r\n                        placeholder=\"Пароль\"\r\n                        id=\"logInPassword\"\r\n                        required\r\n                        minLength=\"2\"\r\n                        maxLength=\"200\"\r\n                    />\r\n                    <span className=\"error\" id=\"profession-error\">\r\n                        {/* {props.validity.message.editDescription} */}\r\n                    </span>\r\n                </>\r\n            }\r\n        />\r\n    );\r\n}\r\n\r\nexport default LogIn;\r\n","C:\\dev\\frontend\\react-mesto-auth\\src\\components\\Register.js",["125"],"import React from \"react\";\r\nimport reactDom from \"react-dom\";\r\nimport AuthRegForm from \"./AuthRegForm/AuthRegForm\";\r\nimport \"./AuthRegForm/AuthRegForm.css\";\r\n\r\nfunction Register(props) {\r\n    const [inputValues, setInputValues] = React.useState({\r\n        registerEmail: \"\",\r\n        registerPassword: \"\",\r\n    });\r\n\r\n    const handleChange = (event) => {\r\n        setInputValues({\r\n            ...inputValues,\r\n            [event.target.name]: event.target.value,\r\n        });\r\n        // props.handleValidity(event.target);\r\n        console.log(inputValues);\r\n    };\r\n\r\n    function handleSubmit(e) {\r\n        e.preventDefault();\r\n        props.onSubmit(inputValues);\r\n    }\r\n\r\n    return (\r\n        <AuthRegForm\r\n            onSubmit={handleSubmit}\r\n            formText=\"Регистрация\"\r\n            buttonText=\"Зарегистрироваться\"\r\n            name=\"register\"\r\n            redirect=\"/sign-in\"\r\n            regLink=\"Уже зарегистрированы? Войти\"\r\n            children={\r\n                <>\r\n                    <input\r\n                        value={inputValues.registerEmail || \"\"}\r\n                        type=\"email\"\r\n                        onChange={handleChange}\r\n                        className=\"authRegForm__field\"\r\n                        placeholder=\"Email\"\r\n                        name=\"registerEmail\"\r\n                        id=\"registerEmail\"\r\n                        required\r\n                        minLength=\"2\"\r\n                        maxLength=\"40\"\r\n                    />\r\n                    <span className=\"error\" id=\"name-error\">\r\n                        {/* {props.validity.message.editName} */}\r\n                    </span>\r\n                    <input\r\n                        value={inputValues.registerPassword || \"\"}\r\n                        type=\"password\"\r\n                        onChange={handleChange}\r\n                        className=\"authRegForm__field\"\r\n                        name=\"registerPassword\"\r\n                        placeholder=\"Пароль\"\r\n                        id=\"registerPassword\"\r\n                        required\r\n                        minLength=\"2\"\r\n                        maxLength=\"200\"\r\n                    />\r\n                    <span className=\"error\" id=\"profession-error\">\r\n                        {/* {props.validity.message.editDescription} */}\r\n                    </span>\r\n                </>\r\n            }\r\n        />\r\n    );\r\n}\r\n\r\nexport default Register;\r\n","C:\\dev\\frontend\\react-mesto-auth\\src\\components\\AddPlacePopup .js",["126","127"],"import React from \"react\";\r\nimport PopupWithForm from \"./PopupWithForm\";\r\nimport { useFormAndValidation } from \"../hooks/Validation\";\r\n\r\nfunction AddPlacePopup(props) {\r\n    const { values, handleChange, errors, isValid, setValues, resetForm } =\r\n        useFormAndValidation();\r\n\r\n    function handleSubmit(e) {\r\n        e.preventDefault(e);\r\n        props.onAddCard(values);\r\n    }\r\n\r\n    React.useEffect(() => {\r\n        setValues({ addName: \"\", addLink: \"\" });\r\n    }, [props.isOpen]);\r\n\r\n    return (\r\n        <PopupWithForm\r\n            validButton={isValid}\r\n            loader={props.loader}\r\n            onSubmit={handleSubmit}\r\n            title=\"Новое&nbsp;место\"\r\n            name=\"add\"\r\n            isOpen={props.isOpen}\r\n            onCloseAll={props.onClose}\r\n            children={\r\n                <>\r\n                    <input\r\n                        type=\"text\"\r\n                        onChange={handleChange}\r\n                        className=\"popup__field popup__field_type_place\"\r\n                        placeholder=\"Название\"\r\n                        name=\"addName\"\r\n                        id=\"place\"\r\n                        minLength=\"2\"\r\n                        maxLength=\"30\"\r\n                        required\r\n                        value={values.addName || \"\"}\r\n                    />\r\n                    <span className=\"error\" id=\"place-error\">\r\n                        {errors.addName}\r\n                    </span>\r\n                    <input\r\n                        type=\"url\"\r\n                        onChange={handleChange}\r\n                        className=\"popup__field popup__field_type_link\"\r\n                        placeholder=\"Ссылка на картинку\"\r\n                        name=\"addLink\"\r\n                        id=\"link\"\r\n                        required\r\n                        value={values.addLink || \"\"}\r\n                    />\r\n                    <span className=\"error\" id=\"link-error\">\r\n                        {errors.addLink}\r\n                    </span>\r\n                </>\r\n            }\r\n        />\r\n    );\r\n}\r\n\r\nexport default AddPlacePopup;\r\n\r\n// import React from \"react\";\r\n// import PopupWithForm from \"./PopupWithForm\";\r\n\r\n// function AddPlacePopup(props) {\r\n//     const [inputName, setName] = React.useState({ addName: \"\", addLink: \"\" });\r\n\r\n//     function handleChange(e) {\r\n//         setName({ ...inputName, [e.target.name]: e.target.value });\r\n//         console.log(inputName);\r\n//         props.handleValidity(e.target);\r\n//     }\r\n\r\n//     function handleSubmit(e) {\r\n//         e.preventDefault(e);\r\n//         props.onAddCard(inputName);\r\n//     }\r\n\r\n//     React.useEffect(() => {\r\n//         setName({ addName: \"\", addLink: \"\" });\r\n//     }, [props.isOpen]);\r\n\r\n//     return (\r\n//         <PopupWithForm\r\n//             validButton={props.validity.isValid}\r\n//             loader={props.loader}\r\n//             onSubmit={handleSubmit}\r\n//             title=\"Новое&nbsp;место\"\r\n//             name=\"add\"\r\n//             isOpen={props.isOpen}\r\n//             onCloseAll={props.onClose}\r\n//             children={\r\n//                 <>\r\n//                     <input\r\n//                         type=\"text\"\r\n//                         onChange={handleChange}\r\n//                         className=\"popup__field popup__field_type_place\"\r\n//                         placeholder=\"Название\"\r\n//                         name=\"addName\"\r\n//                         id=\"place\"\r\n//                         minLength=\"2\"\r\n//                         maxLength=\"30\"\r\n//                         required\r\n//                         value={inputName.addName}\r\n//                     />\r\n//                     <span className=\"error\" id=\"place-error\">\r\n//                         {props.validity.message.addName}\r\n//                     </span>\r\n//                     <input\r\n//                         type=\"url\"\r\n//                         onChange={handleChange}\r\n//                         className=\"popup__field popup__field_type_link\"\r\n//                         placeholder=\"Ссылка на картинку\"\r\n//                         name=\"addLink\"\r\n//                         id=\"link\"\r\n//                         required\r\n//                         value={inputName.addLink}\r\n//                     />\r\n//                     <span className=\"error\" id=\"link-error\">\r\n//                         {props.validity.message.addLink}\r\n//                     </span>\r\n//                 </>\r\n//             }\r\n//         />\r\n//     );\r\n// }\r\n\r\n// export default AddPlacePopup;\r\n","C:\\dev\\frontend\\react-mesto-auth\\src\\utils\\Api.js",[],"C:\\dev\\frontend\\react-mesto-auth\\src\\utils\\Auth.js",[],"C:\\dev\\frontend\\react-mesto-auth\\src\\contexts\\CurrentUserContext.js",["128"],"import React, { createContext } from \"react\";\r\n\r\nexport const CurrentUserContext = React.createContext();\r\n\r\nexport const currentUser = {\r\n\r\n}","C:\\dev\\frontend\\react-mesto-auth\\src\\components\\Nav\\NavButton.js",["129","130","131"],"import React from \"react\";\r\nimport reactDom from \"react-dom\";\r\nimport { Routes, Route, useNavigate } from \"react-router-dom\";\r\nimport \"../Nav/NavButton.css\";\r\n\r\nfunction NavButton(props) {\r\n    const history = useNavigate();\r\n\r\n    function handleClick() {\r\n        props.loggedIn && props.onClick();\r\n        history(props.redirect);\r\n    }\r\n    return (\r\n        <div className=\"nav\">\r\n            <input id=\"menu-toggle\" type=\"checkbox\" />\r\n            <label className=\"menu-btn\" htmlFor=\"menu-toggle\">\r\n                <span></span>\r\n            </label>\r\n            <div className=\"nav__container\">\r\n                {props.email && props.email}\r\n                <button onClick={handleClick} className=\"nav__button\">\r\n                    {props.buttonText}\r\n                </button>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default NavButton;\r\n","C:\\dev\\frontend\\react-mesto-auth\\src\\components\\InfoToolTip\\InfoTooltip.js",["132"],"import React from \"react\";\r\nimport reactDom from \"react-dom\";\r\nimport success from \"../../images/Union.png\";\r\nimport fail from \"../../images/Union-Err.png\";\r\nimport \"../InfoToolTip/InfoTooltip.css\";\r\n\r\nfunction InfoTooltip(props) {\r\n    return (\r\n        <article\r\n            // onMouseUp={this.handleOverlay}\r\n            className={`popup ${props.isOpened && \"popup_opened\"}`}\r\n        >\r\n            <div className=\"popup__container\">\r\n                <img\r\n                    className=\"popup__image\"\r\n                    src={props.success ? success : fail}\r\n                    alt={\r\n                        props.success\r\n                            ? \"Вы зарегистрировались\"\r\n                            : \"Что то пошло не так\"\r\n                    }\r\n                />\r\n                <h3 className=\"popup__text\">\r\n                    {props.success\r\n                        ? \"Вы успешно зарегистрировались!\"\r\n                        : \"Что-то пошло не так!Попробуйте ещё раз.\"}\r\n                </h3>\r\n                <button\r\n                    onClick={props.onClose}\r\n                    className={`popup__close`}\r\n                    type=\"button\"\r\n                    // onClick={this.props.onCloseAll}\r\n                ></button>\r\n            </div>\r\n        </article>\r\n    );\r\n}\r\n\r\nexport default InfoTooltip;\r\n","C:\\dev\\frontend\\react-mesto-auth\\src\\components\\Card.js",["133"],"import React from \"react\";\r\nimport { CurrentUserContext } from \"../contexts/CurrentUserContext\";\r\n\r\nclass Card extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  static contextType = CurrentUserContext;\r\n\r\n  handleClick = () => {\r\n    this.props.onImage(this.props.card);\r\n    this.props.onImagePopup();\r\n  };\r\n\r\n  handleLikeClick = () => {\r\n    this.props.onCardLike(this.props.card);\r\n  };\r\n\r\n  handleDeleteClick = () => {\r\n    this.props.onCardDelete(this.props.card);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <article className=\"elements__item\">\r\n        {/* {console.log(el)} console.log(this.context)*/}\r\n        <img\r\n          className=\"elements__illustration\"\r\n          src={this.props.card.link}\r\n          alt=\"Иллюстрация к карточке\"\r\n          onClick={this.handleClick}\r\n        />\r\n        <div className=\"elements__info\">\r\n          <h2 className=\"elements__title\">{this.props.card.name}</h2>\r\n          <div className=\"elements__info-container\">\r\n            <button\r\n              className={`elements__like ${\r\n                this.props.card.likes.some((el) => {\r\n                  console.log(el);\r\n                  return el === this.context._id;\r\n                }) && \"elements__like_active\"\r\n              }`}\r\n              onClick={this.handleLikeClick}\r\n              type=\"button\"\r\n            ></button>\r\n            <span className=\"elements__like-count\">\r\n              {this.props.card.likes.length}\r\n            </span>\r\n          </div>\r\n        </div>\r\n        <button\r\n          onClick={this.handleDeleteClick}\r\n          className={`elements__delete ${\r\n            this.props.card.owner._id !== this.context._id &&\r\n            \"elements__delete_hidden\"\r\n          }`}\r\n        ></button>\r\n      </article>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Card;\r\n","C:\\dev\\frontend\\react-mesto-auth\\src\\components\\AuthRegForm\\AuthRegForm.js",["134"],"import React from \"react\";\r\nimport reactDom from \"react-dom\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nfunction AuthRegForm(props) {\r\n    const history = useNavigate();\r\n    function handleLogIn() {\r\n        history(props.redirect);\r\n    }\r\n    return (\r\n        <form\r\n            onSubmit={props.onSubmit}\r\n            className={`authRegForm`}\r\n            name={`${props.name}`}\r\n            id={`form_${props.name}ID`}\r\n        >\r\n            <h2 className=\"authRegForm__title\">{props.formText}</h2>\r\n            {props.children}\r\n            <button\r\n                type=\"submit\"\r\n                className={`authRegForm__submit\r\n                            ${!props.validButton && \"ssubmit-invalid\"}`}\r\n            >\r\n                {props.buttonText}\r\n            </button>\r\n            {props.regLink && (\r\n                <h3 className=\"authRegForm__logLink\" onClick={handleLogIn}>\r\n                    {props.regLink}\r\n                </h3>\r\n            )}\r\n        </form>\r\n    );\r\n}\r\n\r\nexport default AuthRegForm;\r\n","C:\\dev\\frontend\\react-mesto-auth\\src\\hooks\\Validation.js",[],{"ruleId":"135","severity":1,"message":"136","line":5,"column":25,"nodeType":"137","messageId":"138","endLine":5,"endColumn":31},{"ruleId":"135","severity":1,"message":"139","line":3,"column":3,"nodeType":"137","messageId":"138","endLine":3,"endColumn":16},{"ruleId":"135","severity":1,"message":"140","line":6,"column":3,"nodeType":"137","messageId":"138","endLine":6,"endColumn":7},{"ruleId":"135","severity":1,"message":"141","line":27,"column":8,"nodeType":"137","messageId":"138","endLine":27,"endColumn":13},{"ruleId":"142","severity":1,"message":"143","line":63,"column":6,"nodeType":"144","endLine":63,"endColumn":16,"suggestions":"145"},{"ruleId":"135","severity":1,"message":"146","line":1,"column":17,"nodeType":"137","messageId":"138","endLine":1,"endColumn":26},{"ruleId":"135","severity":1,"message":"147","line":3,"column":8,"nodeType":"137","messageId":"138","endLine":3,"endColumn":14},{"ruleId":"135","severity":1,"message":"148","line":4,"column":8,"nodeType":"137","messageId":"138","endLine":4,"endColumn":11},{"ruleId":"135","severity":1,"message":"141","line":8,"column":8,"nodeType":"137","messageId":"138","endLine":8,"endColumn":13},{"ruleId":"149","severity":1,"message":"150","line":4,"column":5,"nodeType":"151","messageId":"152","endLine":6,"endColumn":6},{"ruleId":"135","severity":1,"message":"153","line":6,"column":41,"nodeType":"137","messageId":"138","endLine":6,"endColumn":48},{"ruleId":"135","severity":1,"message":"154","line":6,"column":61,"nodeType":"137","messageId":"138","endLine":6,"endColumn":70},{"ruleId":"142","severity":1,"message":"155","line":18,"column":6,"nodeType":"144","endLine":18,"endColumn":20,"suggestions":"156"},{"ruleId":"135","severity":1,"message":"157","line":5,"column":5,"nodeType":"137","messageId":"138","endLine":5,"endColumn":16},{"ruleId":"135","severity":1,"message":"154","line":12,"column":63,"nodeType":"137","messageId":"138","endLine":12,"endColumn":72},{"ruleId":"142","severity":1,"message":"158","line":21,"column":8,"nodeType":"144","endLine":21,"endColumn":35,"suggestions":"159"},{"ruleId":"135","severity":1,"message":"160","line":2,"column":8,"nodeType":"137","messageId":"138","endLine":2,"endColumn":16},{"ruleId":"135","severity":1,"message":"161","line":3,"column":10,"nodeType":"137","messageId":"138","endLine":3,"endColumn":16},{"ruleId":"135","severity":1,"message":"162","line":3,"column":18,"nodeType":"137","messageId":"138","endLine":3,"endColumn":23},{"ruleId":"135","severity":1,"message":"160","line":2,"column":8,"nodeType":"137","messageId":"138","endLine":2,"endColumn":16},{"ruleId":"135","severity":1,"message":"160","line":2,"column":8,"nodeType":"137","messageId":"138","endLine":2,"endColumn":16},{"ruleId":"135","severity":1,"message":"154","line":6,"column":63,"nodeType":"137","messageId":"138","endLine":6,"endColumn":72},{"ruleId":"142","severity":1,"message":"155","line":16,"column":8,"nodeType":"144","endLine":16,"endColumn":22,"suggestions":"163"},{"ruleId":"135","severity":1,"message":"164","line":1,"column":17,"nodeType":"137","messageId":"138","endLine":1,"endColumn":30},{"ruleId":"135","severity":1,"message":"160","line":2,"column":8,"nodeType":"137","messageId":"138","endLine":2,"endColumn":16},{"ruleId":"135","severity":1,"message":"161","line":3,"column":10,"nodeType":"137","messageId":"138","endLine":3,"endColumn":16},{"ruleId":"135","severity":1,"message":"162","line":3,"column":18,"nodeType":"137","messageId":"138","endLine":3,"endColumn":23},{"ruleId":"135","severity":1,"message":"160","line":2,"column":8,"nodeType":"137","messageId":"138","endLine":2,"endColumn":16},{"ruleId":"149","severity":1,"message":"150","line":5,"column":3,"nodeType":"151","messageId":"152","endLine":7,"endColumn":4},{"ruleId":"135","severity":1,"message":"160","line":2,"column":8,"nodeType":"137","messageId":"138","endLine":2,"endColumn":16},"no-unused-vars","'Outlet' is defined but never used.","Identifier","unusedVar","'BrowserRouter' is defined but never used.","'Link' is defined but never used.","'react' is defined but never used.","react-hooks/exhaustive-deps","React Hook React.useEffect has a missing dependency: 'handleTokenCheck'. Either include it or remove the dependency array.","ArrayExpression",["165"],"'useEffect' is defined but never used.","'avatar' is defined but never used.","'Api' is defined but never used.","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","'isValid' is assigned a value but never used.","'resetForm' is assigned a value but never used.","React Hook React.useEffect has a missing dependency: 'setValues'. Either include it or remove the dependency array.",["166"],"'currentUser' is defined but never used.","React Hook React.useEffect has missing dependencies: 'setValues' and 'values'. Either include them or remove the dependency array.",["167"],"'reactDom' is defined but never used.","'Routes' is defined but never used.","'Route' is defined but never used.",["168"],"'createContext' is defined but never used.",{"desc":"169","fix":"170"},{"desc":"171","fix":"172"},{"desc":"173","fix":"174"},{"desc":"171","fix":"175"},"Update the dependencies array to be: [handleTokenCheck, loggedIn]",{"range":"176","text":"177"},"Update the dependencies array to be: [props.isOpen, setValues]",{"range":"178","text":"179"},"Update the dependencies array to be: [currentUser, props.isOpen, setValues, values]",{"range":"180","text":"181"},{"range":"182","text":"179"},[2384,2394],"[handleTokenCheck, loggedIn]",[471,485],"[props.isOpen, setValues]",[629,656],"[currentUser, props.isOpen, setValues, values]",[473,487]]